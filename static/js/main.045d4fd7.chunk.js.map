{"version":3,"sources":["firebase.js","Navbar.js","MyLists.js","Login.js","ConcertDetailsPopUp.js","ConcertCard.js","Search.js","Landing.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Navbar","className","to","Component","MyLists","state","newName","newList","newBudget","published","userSessionKey","this","props","id","database","ref","on","response","val","console","log","href","Login","handleRadioChange","e","isUserNew","target","value","setState","userNew","userEmailError","userCityError","validateInput","input","field","name","stateError","userName","userEmail","userPassword","userCity","test","handleInputChange","handleSubmit","preventDefault","userNameError","userPasswordError","isLoggedIn","isLoggedOn","space","onChange","htmlFor","type","onClick","ConcertDetailsPopUp","modalEvent","artist","d","newDate","Date","setTime","getTime","toDateString","axios","url","match","params","eventID","method","responseType","apikey","locale","segment","then","res","data","dateStr","dates","start","localDate","dateFormat","dateConvert","minPrice","priceRanges","min","_embedded","attractions","map","art","venue","venues","location","city","country","info","toFixed","date","status","code","toUpperCase","imgUrl","images","tickets","src","alt","key","ConcertCard","handleError","error","event","filteredResults","isFiltered","filterPrice","errorMsg","searchCity","searchArtist","currency","max","events","cityCountry","dateNum","parse","price","collectPrice","filterResults","parseFloat","entry","eventCopy","filter","keyword","undefined","loca","segmentName","resEvent","mapToAppData","runAxios","handleChange","showFiltered","renderConcertCell","Search","findCity","dataType","reqUrl","proxyHeaders","header_params","xmlToJSON","cityNames","length","displayDropdown","handleLocation","split","userLocationSplit","userLocation","userArtist","replace","exact","path","Landing","App","userInfo","allLists","listName","budgetList","budget","push","getKey","basename","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"kcAaAA,IAASC,cATM,CACdC,OAAQ,0CACRC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,eACnBC,MAAO,8CAKOR,QAAf,E,gCCceS,G,6KAxBb,OACC,yBAAKC,UAAU,UACd,wBAAIA,UAAU,WACb,4BACC,kBAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,WAA1B,WAID,4BACC,kBAAC,IAAD,CAAMD,UAAU,OAAOC,GAAG,WAA1B,WAID,4BACC,kBAAC,IAAD,CAAMD,UAAU,OAAOC,GAAG,UAA1B,e,GAhBeC,cC6DNC,G,wDA1Db,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACVC,QAAS,GACRC,QAAS,GACTC,UAAW,GACdC,WAAW,EACXC,eAAgB,IARP,E,gEAaO,IAAD,OACAC,KAAKC,MAAMC,GACftB,EAASuB,WAAWC,IAApB,cAGRC,GAAG,SAAS,SAACC,GACJA,EAASC,MAEtBC,QAAQC,IAAI,EAAKR,MAAMC,S,+BAyBzB,OACI,yBAAKZ,UAAU,cACb,2CACF,4BAAI,uBAAGoB,KAAK,IAAIpB,UAAU,gBAAtB,qBACJ,4CACA,gD,GApDcE,cCoHPmB,G,wDAtHX,aAAe,IAAD,8BACV,gBAcJC,kBAAoB,SAACC,GACjB,IAAMC,EAA+B,SAAnBD,EAAEE,OAAOC,MACvB,EAAKC,SAAS,CACVC,QAASJ,EACTK,gBAAgB,EAChBC,eAAe,KApBb,EAwBdC,cAAgB,SAACC,GACb,IAAMC,EAAQD,EAAME,KAWdC,EAAaF,EAAQ,SAVR,CAEfG,SAAU,iDAEVC,UAAW,gDAEXC,aAAc,0CAEdC,SAAU,iEAGCN,GAAOO,KAAKR,EAAMN,QAQ7BM,EAAMhC,UAAY,aAClB,EAAK2B,SAAL,eACKQ,GAAa,MATlBH,EAAMhC,UAAY,eAClBkB,QAAQC,IAAIgB,GACZ,EAAKR,SAAL,eACKQ,GAAa,MAzCZ,EAmDdM,kBAAoB,SAAClB,GACjB,EAAKQ,cAAcR,EAAEE,QACrB,EAAKE,SAAL,eACKJ,EAAEE,OAAOS,KAAOX,EAAEE,OAAOC,SAtDpB,EA0DdgB,aAAe,SAACnB,GACZA,EAAEoB,iBACG,EAAKvC,MAAMwC,eAAkB,EAAKxC,MAAMyB,gBAAmB,EAAKzB,MAAMyC,mBAAsB,EAAKzC,MAAM0B,eACxG,EAAKH,SAAS,CACVmB,YAAY,KA5DpB,EAAK1C,MAAQ,CACT2C,YAAY,EACZnB,SAAS,EACTQ,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,SAAU,GACVK,eAAe,EACff,gBAAgB,EAChBgB,mBAAmB,EACnBf,eAAe,GAZT,E,qDAyEN,IAAD,EACyHpB,KAAKN,MAA9HwB,EADA,EACAA,QAASQ,EADT,EACSA,SAAUC,EADnB,EACmBA,UAAWC,EAD9B,EAC8BA,aAAcC,EAD5C,EAC4CA,SAAUK,EADtD,EACsDA,cAAef,EADrE,EACqEA,eAAgBgB,EADrF,EACqFA,kBAAmBf,EADxG,EACwGA,cACvGkB,EAAQ,0BAAMhD,UAAU,qBAC5B,OACI,yBAAKA,UAAU,sBACX,8BACI,8BAAUiD,SAAUvC,KAAKY,kBAAmBI,MAAOE,GAC/C,yBAAK5B,UAAW4B,EAAU,gCAAkC,eACxD,2BAAOsB,QAAQ,UAAS,wCACxB,2BAAOlD,UAAU,UAAUmD,KAAK,QAAQjB,KAAK,UAAUtB,GAAG,SAASc,MAAM,UAE7E,yBAAK1B,UAAY4B,EAA4C,cAAlC,iCACvB,2BAAOsB,QAAQ,SAAQ,uCACvB,2BAAOlD,UAAU,UAAUmD,KAAK,QAAQjB,KAAK,UAAUtB,GAAG,QAAQc,MAAM,YAGhF,yBAAK1B,UAAU,wBACX,2BAAOkD,QAAQ,YAAf,YACA,2BAAOD,SAAUvC,KAAK+B,kBAAmBU,KAAK,OAAOjB,KAAK,WAAWR,MAAOU,IAC3EQ,EAAgB,0EAAqDI,EACrEpB,EACG,kBAAC,WAAD,KACI,2BAAOsB,QAAQ,aAAf,iBACA,2BAAOD,SAAUvC,KAAK+B,kBAAmBU,KAAK,QAAQjB,KAAK,YAAYR,MAAOW,IAC7ER,EAAiB,iEAA4CmB,GAElE,KACJ,2BAAOE,QAAQ,gBAAf,YACA,2BAAOD,SAAUvC,KAAK+B,kBAAmBU,KAAK,WAAWjB,KAAK,eAAeR,MAAOY,IACnFO,EAAoB,0EAAqDG,EACzEpB,EACD,kBAAC,WAAD,KACI,2BAAOsB,QAAQ,YAAf,aACA,2BAAOD,SAAUvC,KAAK+B,kBAAmBU,KAAK,OAAOjB,KAAK,WAAWtB,GAAI2B,IACxET,EAAgB,+DAA0CkB,GAE/D,KACA,4BAAQI,QAAS1C,KAAKgC,cAAed,EAAU,UAAY,gB,GA/G/D1B,cC0ILmD,G,wDAxId,aAAe,IAAD,8BACb,gBAEKjD,MAAQ,CACZkD,WAAY,CACXC,OAAQ,KALG,E,wDAUFC,GACX,IAAIC,EAAU,IAAIC,KAAKF,GAMvB,OAJAC,EAAU,IAAIC,KAAKD,EAAQE,QAAQF,EAAQG,UAAY,SAElCC,iB,0CAKD,IAAD,OACnBC,IAAM,CACLC,IAAI,oDAAD,OAAsDrD,KAAKC,MAAMqD,MAAMC,OAAOC,SACjFC,OAAQ,MACRC,aAAc,OACdH,OAAQ,CACPI,OAAQ,mCACRC,OAAQ,QACRC,QAAS,WAERC,MAAK,SAAAxD,GACP,IAAMyD,EAAMzD,EAAS0D,KACrBxD,QAAQC,IAAIsD,GAEZ,IAAME,EAAUF,EAAIG,MAAMC,MAAMC,UAC1BC,EAAa,EAAKC,YAAYL,GAC9BM,EAAWR,EAAIS,YAAY,GAAGC,IAE9B5B,EAASkB,EAAIW,UAAUC,YAAYC,KAAI,SAAAC,GAC5C,OAAOA,EAAIrD,QAGZ,EAAKP,SAAS,CACb2B,WAAY,CACXY,QAASO,EAAI7D,GACbsB,KAAMuC,EAAIvC,KACVsD,MAAOf,EAAIW,UAAUK,OAAO,GAAGvD,KAC/BwD,SAAU,CACTC,KAAMlB,EAAIW,UAAUK,OAAO,GAAGE,KAAKzD,KACnC0D,QAASnB,EAAIW,UAAUK,OAAO,GAAGG,QAAQ1D,MAE1C2D,KAAMpB,EAAIoB,KACVZ,SAAUA,EAASa,QAAQ,GAC3BC,KAAMhB,EACNiB,OAASvB,EAAIG,MAAMoB,OAAOC,KAAMC,cAChCC,OAAQ1B,EAAI2B,OAAO,GAAGrC,IACtBsC,QAAS5B,EAAIV,IACbR,iB,+BAOH,OACC,yBAAKvD,UAAU,kBACd,yBAAKA,UAAU,WACf,yBAAKA,UAAU,gBACd,6BACC,4BAAKU,KAAKN,MAAMkD,WAAWpB,MAC3B,kCAAQxB,KAAKN,MAAMkD,WAAWkC,OAC9B,4BAAK9E,KAAKN,MAAMkD,WAAWyC,MAE3B,yBAAK/F,UAAU,cACd,yBAAKsG,IAAK5F,KAAKN,MAAMkD,WAAW6C,OAAQI,IAAK7F,KAAKN,MAAMkD,WAAWpB,SAGrE,yBAAKlC,UAAU,cACd,yBAAKA,UAAU,qBAEoB,cAAjCU,KAAKN,MAAMkD,WAAW0C,OACpB,oCACF,wBAAIhG,UAAU,eAAeU,KAAKN,MAAMkD,WAAW0C,QACnD,8EAGA,oCACC,wBAAIhG,UAAU,eAAeU,KAAKN,MAAMkD,WAAW0C,QACnD,iDAAuBtF,KAAKN,MAAMkD,WAAW2B,UAC7C,2CACA,4BAEEvE,KAAKN,MAAMkD,WAAWC,OAAO+B,KAAI,SAAAC,GAClC,OACC,wBAAIiB,IAAKjB,GACR,2BACEA,SAWP,4BAAK7E,KAAKN,MAAMkD,WAAWuC,OAE5B,yBAAK7F,UAAU,gBAEoB,cAAjCU,KAAKN,MAAMkD,WAAW0C,OACpB,mDACA,oCACD,mDACA,+CAEA,uBAAG5E,KAAMV,KAAKN,MAAMkD,WAAW+C,SAC9B,0D,GAvHwBnG,cC0PnBuG,G,wDAxPd,aAAe,IAAD,8BACb,gBAoNDC,YAAc,SAACnF,GACdA,EAAEoB,iBACF,EAAKhB,SAAS,CACbgF,OAAO,KAtNR,EAAKvG,MAAQ,CACZwG,MAAO,GACPtD,WAAY,GACZuD,gBAAiB,GACjBC,YAAY,EACZC,YAAa,IACbJ,MAAO,GACPK,SAAU,GACVC,WAAY,GACZC,aAAc,IAXF,E,wDAeF1D,GACX,IAAIC,EAAU,IAAIC,KAAKF,GAMvB,OAJAC,EAAU,IAAIC,KAAKD,EAAQE,QAAQF,EAAQG,UAAY,SAElCC,iB,mCAKRa,GACb,OAAIA,EAAKQ,YACA,CACP/B,KAAMuB,EAAKQ,YAAY,GAAG/B,KAC1BgE,SAAUzC,EAAKQ,YAAY,GAAGiC,SAC9BhC,IAAI,GAAD,OAAKT,EAAKQ,YAAY,GAAGC,IAAIW,QAAQ,IACxCsB,IAAI,GAAD,OAAK1C,EAAKQ,YAAY,GAAGkC,IAAItB,QAAQ,KAGjC,CACP3C,MAAM,EACNgE,UAAU,EACVhC,IAAK,MACLiC,IAAK,S,mCAMKpG,GAAY,IAAD,OAoDvB,OAnDYA,EAAS0D,KAAKU,UAAUiC,OACf/B,KAAK,SAACZ,GAE1B,IAAMR,EAAUQ,EAAK9D,GAGfsB,EAAOwC,EAAKxC,KAGZsD,EAASd,EAAKU,UAAUK,OAAO,GAAGvD,KAGlCyD,EAAOjB,EAAKU,UAAUK,OAAO,GAAGE,KAAKzD,KAErC0D,EAAUlB,EAAKU,UAAUK,OAAO,GAAGG,QAAQ1D,KAE3CoF,EAAW,UAAM3B,EAAN,aAAeC,GAG1BjB,EAAUD,EAAKE,MAAMC,MAAMC,UAE3BC,EAAa,EAAKC,YAAYL,GAWpC,MAAQ,CACPT,UACAhC,OACAsD,QACAE,SAAU,CACTC,OACAC,UACA0B,eAEDvB,KAAM,CACLpB,UACA4C,QApBc7D,KAAK8D,MAAM7C,GAqBzBI,cAEDoB,OApBczB,EAAK0B,OAAO,GAAGrC,IAsB7B0D,MAnBa,EAAKC,aAAahD,S,mCAyBrBkC,GAEZlG,KAAKiH,cAAcf,EAAMnF,OAAOC,OAEhChB,KAAKiB,SAAS,CACboF,YAAaa,WAAWhB,EAAMnF,OAAOC,W,wCAIrBmG,GACjB,OAEC,yBAAKrB,IAAKqB,EAAM3D,QAASlE,UAAU,eAClC,kBAAC,IAAD,CAAMC,GAAE,iBAAY4H,EAAM3D,UAC1B,yBAAKlE,UAAU,kBAEd,yBAAKsG,IAAKuB,EAAM1B,OAAQI,IAAKsB,EAAM3F,QAGpC,yBAAKlC,UAAU,eACd,4BAAK6H,EAAM3F,MACX,2BAAI2F,EAAM9B,KAAKhB,YAEM,QAApB8C,EAAMJ,MAAMtC,IACV,6DACA,yDAA+B0C,EAAMJ,MAAMtC,U,sCASjD,IAAM2C,EAAYpH,KAAKN,MAAMwG,MACzBa,EAAQG,WAAWlH,KAAKN,MAAM2G,aAE5BF,EAAkBiB,EAAUC,QAAO,SAACnB,GAGxC,OAFqBgB,WAAWhB,EAAMa,MAAMtC,MAAQyC,WAAWH,MAKjE/G,KAAKiB,SAAS,CACbkF,sB,qCAKD,IAAIC,GAAa,EAGhBA,EAD6B,KAA1BpG,KAAKN,MAAM2G,YAMfrG,KAAKiB,SAAS,CACbmF,eAGDpG,KAAKiH,kB,iCAGM,IAAD,OAENhC,EAAO,GACPqC,EAAU,GAGbrC,OAD4BsC,IAAzBvH,KAAKC,MAAM+D,KAAKwD,KACZ,UAEAxH,KAAKC,MAAM+D,KAAKgB,SAAS,GAGhCsC,OAD8BC,IAA3BvH,KAAKC,MAAM+D,KAAKnB,OACT,GAEA7C,KAAKC,MAAM+D,KAAKnB,OAE3BO,IAAM,CACLC,IAAK,mDACLI,OAAQ,MACRC,aAAc,OACdH,OAAQ,CACPI,OAAQ,mCACR8D,YAAa,QACbxC,OACAqC,aAECxD,MAAK,SAAAxD,GACP,GAAI,cAAeA,EAAS0D,KAAM,CACjC,IAAM0D,EAAW,EAAKC,aAAarH,GACnC,EAAKW,SAAS,CACbiF,MAAOwB,EACPzB,OAAO,EACPK,SAAU,UAGX,EAAKrF,SAAS,CACbgF,OAAO,EACPK,SAAU,2CAEX,EAAKrG,MAAM+D,KAAKgB,SAAS,GAAK,GAC9B,EAAK/E,MAAM+D,KAAKnB,OAAS,Q,0CAM3B7C,KAAK4H,a,2CAGL5H,KAAK4H,a,+BAQI,IAAD,SACqB5H,KAAKN,MAA3B2G,EADC,EACDA,YADC,EACYJ,MACpB,OACC,yBAAK3G,UAAU,WACd,6BAASA,UAAU,gBAClB,4BAAKU,KAAKN,MAAM4G,UAChB,+DAEA,4BAAQtF,MAAOqF,EAAa9D,SAAU,SAAC1B,GAAD,OAAO,EAAKgH,aAAahH,KAC9D,4BAAQG,MAAM,KAAd,OACA,4BAAQA,MAAM,MAAd,eACA,4BAAQA,MAAM,MAAd,eACA,4BAAQA,MAAM,MAAd,eACA,4BAAQA,MAAM,OAAd,iBAED,4BAAQ0B,QAAS,SAAC7B,GAAD,OAAO,EAAKiH,aAAajH,KAA1C,WAGD,6BAASvB,UAAU,iBAES,IAA1BU,KAAKN,MAAM0G,WACXpG,KAAKN,MAAMwG,MAAMtB,KAAI,SAAAsB,GAAK,OAAI,EAAK6B,kBAAkB7B,MACrDlG,KAAKN,MAAMyG,gBAAgBvB,KAAI,SAAAsB,GAAK,OAAI,EAAK6B,kBAAkB7B,Y,GAlP3C1G,cCoHXwI,G,wDAlHb,aAAe,IAAD,8BACR,gBAWNC,SAAW,SAAC3G,GACV8B,IAAM,CACFK,OAAQ,MACRJ,IAAK,8BACL6E,SAAU,QACV3E,OAAQ,CACJE,OAAQ,MACR0E,OAAO,6CAAD,OAA+C7G,EAA/C,eACN8G,aAAc,CACVC,cAAe,SAEnBC,WAAW,KAEhBxE,MAAK,SAAAC,GACJ,EAAK9C,SAAS,CACVsH,UAAWxE,EAAIC,OAEfD,EAAIC,KAAKwE,QAAU,GACnB,EAAKvH,SAAS,CACVwH,iBAAiB,QA/BjB,EAqChB1G,kBAAoB,SAAClB,GACjB,EAAKI,SAAL,eACKJ,EAAEE,OAAOS,KAAOX,EAAEE,OAAOC,QAER,iBAAlBH,EAAEE,OAAOS,KAA0BX,EAAEE,OAAOC,MAAMwH,QAAU,EAC5D,EAAKP,SAASpH,EAAEE,OAAOC,OAEvB,EAAKC,SAAS,CACVsH,UAAW,GACXE,iBAAiB,KA9Cb,EAmDhBC,eAAiB,SAAC7H,GACdA,EAAEoB,iBACF,IAAM+C,EAAWnE,EAAEE,OAAOC,MAAM2H,MAAM,MACtC,EAAK1H,SAAS,CACV2H,kBAAmB5D,EACnB6D,aAAchI,EAAEE,OAAOC,MACvByH,iBAAiB,KAzDT,EA6DhBzG,aAAe,SAACnB,GACZA,EAAEoB,iBACF,IAAM6G,EAAa,EAAKpJ,MAAMoJ,WACxBD,EAAe,EAAKnJ,MAAMkJ,kBAClC,EAAK3H,SAAS,CACJ+C,KAAM,CACFnB,OAAQiG,EACR9D,SAAU6D,GAEdA,aAAc,GACdC,WAAY,MArEhB,EAAKpJ,MAAQ,CACT6I,UAAW,GACXK,kBAAmB,GACnBC,aAAc,GACdC,WAAY,GAClBL,iBAAiB,EACXzE,KAAM,IARF,E,qDA2EF,IAAD,SACgEhE,KAAKN,MAAnEmJ,EADF,EACEA,aAAcC,EADhB,EACgBA,WAAYL,EAD5B,EAC4BA,gBAAiBF,EAD7C,EAC6CA,UAAWvE,EADxD,EACwDA,KAC7D,OACI,kBAAC,WAAD,KACI,yBAAK1E,UAAU,kBACX,0BAAMA,UAAU,WACZ,2BAAOkD,QAAQ,gBAAf,YACA,0BAAMlD,UAAU,oBACZ,2BAAOiD,SAAUvC,KAAK+B,kBAAmBU,KAAK,OAAOjB,KAAK,eAAeR,MAAO6H,IAC/EJ,EACG,yBAAKnJ,UAAU,gBACX,4BACKiJ,EAAU3D,KAAI,SAAAK,GACX,OAAO,wBAAIa,IAAKb,EAAK8D,QAAQ,KAAM,KAAK,4BAAQ/H,MAAOiE,EAAMvC,QAAS,EAAKgG,gBAAiBzD,SAIxG,MAER,2BAAOzC,QAAQ,cAAf,UACA,2BAAOD,SAAUvC,KAAK+B,kBAAmBU,KAAK,OAAOjB,KAAK,aAAaR,MAAO8H,IAC9E,4BAAQpG,QAAS1C,KAAKgC,cAClB,kBAAC,IAAD,CAAMzC,GAAG,WAAT,aAMXyE,EAAKgB,UAAYhB,EAAKnB,OACnB,kBAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,WAClB,kBAAC,EAAD,CAAajF,KAAMA,KAEnB,U,GA5GCxE,cCsCN0J,E,kDAvCb,aAAe,IAAD,8BACV,gBACKxJ,MAAQ,CACTC,QAAS,GACTC,QAAS,GACTC,UAAW,GACXC,WAAW,GANL,E,qDASF,IAAD,EACiCE,KAAKC,MAAM+D,KAA1CrE,EADF,EACEA,QAASC,EADX,EACWA,QAASC,EADpB,EACoBA,UACzB,OACQ,yBAAKP,UAAU,2BACX,6BAASA,UAAU,gBACf,sCACA,6BADA,cAEA,+CACA,6BADA,mBAEA,6BAFA,yBAGA,6BAHA,iCAKJ,6BAASA,UAAU,iBACf,+CAAoB,mCAApB,KACA,6BACA,0BAAMA,UAAU,gBACZ,2BAAOkD,QAAQ,WAAf,aACA,2BAAOD,SAAUvC,KAAKC,MAAM8B,kBAAoBP,KAAK,UAAUiB,KAAK,OAAOzB,MAAOrB,IAClF,2BAAO6C,QAAQ,WAAf,aACA,2BAAOD,SAAUvC,KAAKC,MAAM8B,kBAAoBP,KAAK,UAAUiB,KAAK,OAAOzB,MAAOpB,IAClF,2BAAO4C,QAAQ,aAAf,eACA,2BAAOD,SAAUvC,KAAKC,MAAM8B,kBAAoBP,KAAK,YAAYiB,KAAK,OAAOzB,MAAOnB,IACpF,4BAAQ6C,QAAS1C,KAAKC,MAAM+B,cAA5B,oB,GAhCNxC,aC4EP2J,E,kDAjEd,aAAe,IAAD,8BACb,gBASDpH,kBAAoB,SAAClB,GACpB,EAAKI,SAAL,eACEJ,EAAEE,OAAOS,KAAOX,EAAEE,OAAOC,SAZd,EAedgB,aAAe,SAACnB,GACfA,EAAEoB,iBADmB,MAE4B,EAAKvC,MAA/CC,EAFc,EAEdA,QAASC,EAFK,EAELA,QAASC,EAFJ,EAEIA,UACnBuJ,EAAW,CAChB5H,KAAM7B,EACG0J,SAAU,CAClBC,SAAU1J,EACVE,UAPmB,EAEeA,UAMlCyJ,YAAY,EACZC,OAAQ3J,IAIJiG,EADclH,EAASuB,WAAWC,MACtBqJ,KAAKL,GAAUM,SAC3BlJ,QAAQC,IAAIqF,GACZ,EAAK7E,SAAS,CACnBrB,QAAS,GACTC,UAAW,GACXE,eAAgB+F,KA/BjB,EAAKpG,MAAQ,CACZC,QAAS,GACAC,QAAS,GAClBC,UAAW,GACXC,WAAW,EACXC,eAAgB,IAPJ,E,qDAqCb,OACC,kBAAC,IAAD,CAAQ4J,SAAS,KAChB,kBAAC,EAAD,MACD,yBAAKrK,UAAU,OAEZU,KAAKN,MAAMK,eAAiB,kBAAC,EAAD,CAASG,GAAIF,KAAKN,MAAMK,iBAAqB,KAC3E,gCACM,kBAAC,EAAD,MACL,kBAAC,EAAD,CAASgC,kBAAmB/B,KAAK+B,kBAAmBC,aAAchC,KAAKgC,aAAcgC,KAAMhE,KAAKN,SAEjG,8BACC,kBAAC,EAAD,MACK,kBAAC,IAAD,CAAOuJ,KAAK,UAAUW,UAAWjJ,IAItC,kBAAC,IAAD,CAAOqI,OAAK,EAACC,KAAK,mBACjB,kBAAC,EAAD,CAAqB/I,GAAIF,KAAKN,MAAMK,kBAPtC,c,GAhDcP,aCFEqK,QACW,cAA7BC,OAAO9E,SAAS+E,UAEe,UAA7BD,OAAO9E,SAAS+E,UAEhBD,OAAO9E,SAAS+E,SAASzG,MACvB,2DCZN0G,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzG,MAAK,SAAA0G,GACJA,EAAaC,gBAEdC,OAAM,SAAAzE,GACLzF,QAAQyF,MAAMA,EAAM0E,c","file":"static/js/main.045d4fd7.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Initalize Firebase\nconst config = {\n\tapiKey: \"AIzaSyBymJrYdY1TNmwZwPPOIY02q6t3EBz3WUU\",\n\tauthDomain: \"concert-accountant-cca1f.firebaseapp.com\",\n\tdatabaseURL: \"https://concert-accountant-cca1f.firebaseio.com\",\n\tprojectId: \"concert-accountant-cca1f\",\n\tstorageBucket: \"concert-accountant-cca1f.appspot.com\",\n\tmessagingSenderId: \"357158929786\",\n\tappId: \"1:357158929786:web:6fefa320d3defb953ec2c3\"\n};\nfirebase.initializeApp(config);\n\n// This exports the configuerd version of firebase\nexport default firebase;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"navBar\">\n\t\t\t\t<ul className=\"wrapper\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link className=\"link\" to=\"/login/\">\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link className=\"link\" to=\"/event/\">\n\t\t\t\t\t\t\tEvents\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link className=\"link\" to=\"/list/\">\n\t\t\t\t\t\t\tList\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t)\n\t}\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport './Dashboard.css';\nimport firebase from './firebase';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nclass MyLists extends Component {\n  constructor() {\n      super();\n      // SessionID = -MBGveceho8kTcigOPXt,\n      this.state = {\n      \t  newName: '',\n          newList: '',\n          newBudget: '',\n\t\t\t    published: false,\n\t\t    \tuserSessionKey: ''\n      }\n  }\n\n  \n  componentDidMount() {\n    const sessionID = this.props.id;\n    const dbRef = firebase.database().ref(`/SessionID`);\n    // const key = dbRef.push(userInfo);\n    // console.log(dbRef);\n    dbRef.on('value', (response) => {\n      const data = response.val();\n      // console.log(data);\n      console.log(this.props.id);\n      // for(key in data) {\n        // this.state \n        // }\n      }\n      );\n    }\n    \n    //have to figure out what needs to happen to pull session key into state\n    // The key is \n    // -MBGveceho8kTcigOPXt\n    //How do I do that?\n\n  \n\n  //find key related to list\n\n  //use a for in loop to grab the key\n\n  //firebase.databse().ref(`)\n\n  render() {\n\n\n    // console.log(this.props)\n    return(\n        <div className=\"profileDiv\">\n          <h2>Music Lists</h2>\n        <h3><a href=\"#\" className=\"profilePopup\">Some Music Lists</a></h3>\n        <h3>Wish Lists\\</h3>\n        <h3>Budget List</h3>\n        </div>\n\n    );\n    }\n}\n\nexport default MyLists;","import React, {Component, Fragment} from 'react';\nimport './Login.css'\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isLoggedOn: false,\n            userNew: true,\n            userName: '',\n            userEmail: '',\n            userPassword: '',\n            userCity: '',\n            userNameError: false,\n            userEmailError: false,\n            userPasswordError: false,\n            userCityError: false\n        }\n    }   \n    handleRadioChange = (e) => {\n        const isUserNew = e.target.value === \"true\" ? true : false;\n            this.setState({\n                userNew: isUserNew,\n                userEmailError: false,\n                userCityError: false\n            })\n    }\n    // on component did mount, grab DB info & list of usernames to toss in state\n    validateInput = (input) => {\n        const field = input.name;\n        const inputRegex = {\n            // username must be between 5 and 10 characters\n            userName: /^[a-z0-9]([._](?![._])|[a-z0-9])[a-z0-9]{3,8}$/,\n            // email must be email format\n            userEmail: /^([a-z0-9_ .-]+)@([\\da-z.-]+)\\.([a-z.]{2,6})$/,\n            // password 6-20 characters\n            userPassword: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/,\n            // city only allows letters, special letter characters, and punctuation regularly found in city names\n            userCity: /^([a-zA-Z\\u0080-\\u024F]+(?:. |-| |'))*[a-zA-Z\\u0080-\\u024F]*$/\n        }\n        const stateError = field + \"Error\";\n        if (inputRegex[field].test(input.value)) {\n            input.className = \"fieldSuccess\";\n            console.log(stateError);\n            this.setState({\n                [stateError]: false\n            })\n            // add function to look through usernames to check for matches if pattern is valid and display new error\n        } else {\n            input.className = \"fieldError\"\n            this.setState({\n                [stateError]: true\n            })\n        }\n    }\n    handleInputChange = (e) => {\n        this.validateInput(e.target);\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (!this.state.userNameError && !this.state.userEmailError && !this.state.userPasswordError && !this.state.userCityError) {\n            this.setState({\n                isLoggedIn: true\n            })\n            // call function to set App state to show user is logged in\n            // call function to hide landing page\n            // const dbRef = firebase.database().ref();\n            // dbRef.push(this.state); (will be modified to only push the login data)\n        } else {\n            // some sort of notification about fixing \n        }\n    }\n\n  render() {\n    const {userNew, userName, userEmail, userPassword, userCity, userNameError, userEmailError, userPasswordError, userCityError} = this.state\n      const space = <span className=\"login_form_space\"></span>;\n        return(\n            <div className=\"login_form wrapper\">\n                <form>\n                    <fieldset onChange={this.handleRadioChange} value={userNew}>\n                        <div className={userNew ? \"login_form_active login_radio\" : \"login_radio\"}>\n                            <label htmlFor=\"signUp\"><h4>Sign Up</h4></label>\n                            <input className=\"sr-only\" type=\"radio\" name=\"userNew\" id=\"signUp\" value=\"true\"/>\n                        </div>\n                        <div className={!userNew ? \"login_form_active login_radio\" : \"login_radio\"}>\n                            <label htmlFor=\"logIn\"><h4>Log In</h4></label>\n                            <input className=\"sr-only\" type=\"radio\" name=\"userNew\" id=\"logIn\" value=\"false\"/>\n                        </div>\n                    </fieldset>\n                    <div className=\"login_form_container\">\n                        <label htmlFor=\"userName\">Username</label>\n                        <input onChange={this.handleInputChange} type=\"text\" name=\"userName\" value={userName}/>\n                        {userNameError ? <p>Username must be between 5 and 8 characters</p> : space}\n                        {userNew ? \n                            <Fragment>\n                                <label htmlFor=\"userEmail\">Email address</label>\n                                <input onChange={this.handleInputChange} type=\"email\" name=\"userEmail\" value={userEmail}/>\n                                {userEmailError ? <p>Please enter a valid email address</p> : space}\n                            </Fragment>: \n                            null}\n                        <label htmlFor=\"userPassword\">Password</label>\n                        <input onChange={this.handleInputChange} type=\"password\" name=\"userPassword\" value={userPassword}/>\n                        {userPasswordError ? <p>Password must be between 6 and 8 characters</p> : space}\n                        {userNew ? \n                        <Fragment>\n                            <label htmlFor=\"userCity\">Home city</label>\n                            <input onChange={this.handleInputChange} type=\"text\" name=\"userCity\" id={userCity}/>\n                            {userCityError ? <p>Please remove special characters</p> : space}\n                        </Fragment> :\n                        null}\n                        <button onClick={this.handleSubmit}>{userNew ? \"Sign Up\" : \"Login\"}</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login;\n","import React, {Component} from \"react\";\nimport axios from 'axios';\nimport \"./ConcertDetailsPopUp.css\";\n\nclass ConcertDetailsPopUp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.state = {\n\t\t\tmodalEvent: {\n\t\t\t\tartist: [],\n\t\t\t},\n\t\t}\n\t}\n\n\tdateConvert(d) {\n\t\tlet newDate = new Date(d);\n\t\t\n\t\tnewDate = new Date(newDate.setTime(newDate.getTime() + 1 * 86400000));\n\n\t\tconst date = newDate.toDateString();\n\n\t\treturn date;\n\t};\n\n\tcomponentDidMount() {\n\t\taxios({\n\t\t\turl: `https://app.ticketmaster.com/discovery/v2/events/${this.props.match.params.eventID}`,\n\t\t\tmethod: \"GET\",\n\t\t\tresponseType: \"JSON\",\n\t\t\tparams: {\n\t\t\t\tapikey: \"Mh0RGGBfkgADAASrXM25WfhUueio9rgV\",\n\t\t\t\tlocale: \"en-us\",\n\t\t\t\tsegment: \"music\",\n\t\t\t}\n\t\t}).then(response => {\t\t\t\n\t\t\tconst res = response.data;\n\t\t\tconsole.log(res)\n\n\t\t\tconst dateStr = res.dates.start.localDate;\n\t\t\tconst dateFormat = this.dateConvert(dateStr);\n\t\t\tconst minPrice = res.priceRanges[0].min;\n\t\t\t\n\t\t\tconst artist = res._embedded.attractions.map(art => {\n\t\t\t\treturn art.name;\n\t\t\t})\n\n\t\t\tthis.setState({\n\t\t\t\tmodalEvent: {\n\t\t\t\t\teventID: res.id, \n\t\t\t\t\tname: res.name, \n\t\t\t\t\tvenue: res._embedded.venues[0].name, \n\t\t\t\t\tlocation: { \n\t\t\t\t\t\tcity: res._embedded.venues[0].city.name, \n\t\t\t\t\t\tcountry: res._embedded.venues[0].country.name,\n\t\t\t\t\t},\n\t\t\t\t\tinfo: res.info,\n\t\t\t\t\tminPrice: minPrice.toFixed(2),\n\t\t\t\t\tdate: dateFormat,\n\t\t\t\t\tstatus: (res.dates.status.code).toUpperCase(),\n\t\t\t\t\timgUrl: res.images[0].url,\n\t\t\t\t\ttickets: res.url,\n\t\t\t\t\tartist,\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"modalContainer\">\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"modalContent\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>{this.state.modalEvent.name}</h1>\n\t\t\t\t\t\t<h2> @ {this.state.modalEvent.venue}</h2>\n\t\t\t\t\t\t<h3>{this.state.modalEvent.date}</h3>\n\n\t\t\t\t\t\t<div className=\"modalImage\">\n\t\t\t\t\t\t\t<img src={this.state.modalEvent.imgUrl} alt={this.state.modalEvent.name}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modalEvent\">\n\t\t\t\t\t\t<div className=\"modalEventDetails\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.modalEvent.status === \"CANCELLED\"\n\t\t\t\t\t\t\t\t? <> \n\t\t\t\t\t\t\t\t<h3 className=\"modalStatus\">{this.state.modalEvent.status}</h3> \n\t\t\t\t\t\t\t\t<p>Due to Covid-19, this show has been cancelled.</p>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<h3 className=\"modalStatus\">{this.state.modalEvent.status}</h3>\n\t\t\t\t\t\t\t\t\t<h3>Tickets start at ${this.state.modalEvent.minPrice}</h3>\n\t\t\t\t\t\t\t\t\t<h3>Featuring: </h3>\n\t\t\t\t\t\t\t\t\t<ul>\n\n\t\t\t\t\t\t\t\t\t\t{this.state.modalEvent.artist.map(art => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<li key={art}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{art}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t)})}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<h3>{this.state.modalEvent.info}</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"modalButtons\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.modalEvent.status === \"CANCELLED\" \n\t\t\t\t\t\t\t\t? <button>Add to Wishlist</button>\n\t\t\t\t\t\t\t\t: <>\n\t\t\t\t\t\t\t\t\t<button>Add to Wishlist</button>\n\t\t\t\t\t\t\t\t\t<button>Add to List</button>\n\n\t\t\t\t\t\t\t\t\t<a href={this.state.modalEvent.tickets}>\n\t\t\t\t\t\t\t\t\t\t<button>Buy Tickets</button>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\n\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ConcertDetailsPopUp;","import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport \"./ConcertCard.css\";\n\nclass ConcertCard extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tevent: [],\n\t\t\tmodalEvent: \"\",\n\t\t\tfilteredResults: [],\n\t\t\tisFiltered: false,\n\t\t\tfilterPrice: \"0\",\n\t\t\terror: \"\",\n\t\t\terrorMsg: \"\",\n\t\t\tsearchCity: \"\",\n\t\t\tsearchArtist: \"\",\n\t\t};\t\n\t};\n\t// Function to convert date from YYYY-MM-DD format to Weekday Month Day Year format\n\tdateConvert(d) {\n\t\tlet newDate = new Date(d);\n\t\t\n\t\tnewDate = new Date(newDate.setTime(newDate.getTime() + 1 * 86400000));\n\n\t\tconst date = newDate.toDateString();\n\n\t\treturn date;\n\t};\n\n\tcollectPrice (data) {\n\t\tif (data.priceRanges) {\n\t\t\treturn ({\n\t\t\t\ttype: data.priceRanges[0].type,\n\t\t\t\tcurrency: data.priceRanges[0].currency,\n\t\t\t\tmin: `${data.priceRanges[0].min.toFixed(2)}`,\n\t\t\t\tmax: `${data.priceRanges[0].max.toFixed(2)}`,\n\t\t\t})\n\t\t} else {\n\t\t\treturn ({\n\t\t\t\ttype: false,\n\t\t\t\tcurrency: false,\n\t\t\t\tmin: \"N/A\",\n\t\t\t\tmax: \"N/A\",\n\t\t\t})\n\t\t}\n\t}\n\n\t// Function to parse data\n\tmapToAppData(response)  {\n\t\tconst res = response.data._embedded.events;\n\t\tconst resEvent = res.map( (data) => {\n\t\t\t// To get ID\n\t\t\tconst eventID = data.id;\n\t\t\t\n\t\t\t// To get the name of the artist\n\t\t\tconst name = data.name;\n\t\t\t\n\t\t\t// To get the venue\n\t\t\tconst venue =  data._embedded.venues[0].name;\n\n\t\t\t// To get city, country, and City, Country combo as some entries will not have a state value (ie: Canada has provinces, not states)\n\t\t\tconst city = data._embedded.venues[0].city.name;\n\t\t\t\n\t\t\tconst country = data._embedded.venues[0].country.name;\n\t\t\t\n\t\t\tconst cityCountry = `${city}, ${country}`;\n\t\t\t\n\t\t\t// To get Date\n\t\t\tconst dateStr = data.dates.start.localDate;\n\n\t\t\tconst dateFormat = this.dateConvert(dateStr);\n\n\t\t\tconst dateNum = Date.parse(dateStr);\n\n\t\t\t// To get image\n\t\t\tconst imgUrl = data.images[2].url;\n\n\t\t\t// To get price\n\t\t\tconst price = this.collectPrice(data);\n\n\t\t\t// Return obj to push to this.state.event\n\t\t\treturn ({\n\t\t\t\teventID,\n\t\t\t\tname,\n\t\t\t\tvenue,\n\t\t\t\tlocation: {\n\t\t\t\t\tcity,\n\t\t\t\t\tcountry,\n\t\t\t\t\tcityCountry,\n\t\t\t\t},\n\t\t\t\tdate: {\n\t\t\t\t\tdateStr,\n\t\t\t\t\tdateNum,\n\t\t\t\t\tdateFormat\n\t\t\t\t},\n\t\t\t\timgUrl,\n\t\t\t\t// tickets,\n\t\t\t\tprice,\n\t\t\t});\t\t\n\t\t})\n\t\treturn resEvent;\n\t};\n\t//Update this.state.filterPrice on select\n\thandleChange(event) {\n\n\t\tthis.filterResults(event.target.value);\n\n\t\tthis.setState({\n\t\t\tfilterPrice: parseFloat(event.target.value),\n\t\t})\n\t}\n\n\trenderConcertCell(entry) {\n\t\treturn (\n\t\t\t\t\t\n\t\t\t<div key={entry.eventID} className=\"concertCell\">\n\t\t\t\t<Link to={`/event/${entry.eventID}`}>\n\t\t\t\t<div className=\"imageContainer\">\n\n\t\t\t\t\t<img src={entry.imgUrl} alt={entry.name} />\t\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"concertInfo\">\n\t\t\t\t\t<h2>{entry.name}</h2>\n\t\t\t\t\t<p>{entry.date.dateFormat}</p>\n\t\t\t\t\t\n\t\t\t\t\t{entry.price.min === 'N/A' \n\t\t\t\t\t\t? <p>No prices currently available.</p>\n\t\t\t\t\t\t: <p>Prices starting as low as ${entry.price.min}</p>}\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n\n\tfilterResults() {\n\t\tconst eventCopy = this.state.event;\n\t\tlet price = parseFloat(this.state.filterPrice);\n\n\t\tconst filteredResults = eventCopy.filter((event) => {\n\t\t\t\tconst shouldFilter = parseFloat(event.price.min) <= parseFloat(price)\n\n\t\t\t\treturn shouldFilter\n\t\t})\n\n\t\tthis.setState({\n\t\t\tfilteredResults,\n\t\t})\n\t}\n\n\tshowFiltered() {\n\t\tlet isFiltered = true;\n\n\t\tif (this.state.filterPrice == \"0\") {\n\t\t\tisFiltered = false;\n\t\t} else {\n\t\t\tisFiltered = true;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tisFiltered,\n\t\t})\n\n\t\tthis.filterResults();\n\t}\n\n\trunAxios() {\n\t\t\n\t\tlet city = \"\";\n\t\tlet keyword = \"\";\n\n\t\tif (this.props.data.loca === undefined) {\n\t\t\tcity = \"Toronto\";\n\t\t} else {\n\t\t\tcity = this.props.data.location[0];\n\t\t}\n\t\tif (this.props.data.artist === undefined) {\n\t\t\tkeyword = \"\";\n\t\t} else {\n\t\t\tkeyword = this.props.data.artist;\n\t\t}\n\t\taxios({\n\t\t\turl: \"https://app.ticketmaster.com/discovery/v2/events\",\n\t\t\tmethod: \"GET\",\n\t\t\tresponseType: \"JSON\",\n\t\t\tparams: {\n\t\t\t\tapikey: \"Mh0RGGBfkgADAASrXM25WfhUueio9rgV\",\n\t\t\t\tsegmentName: \"music\",\n\t\t\t\tcity,\n\t\t\t\tkeyword,\n\t\t\t}\n\t\t}).then(response => {\n\t\t\tif (\"_embedded\" in response.data) {\n\t\t\t\tconst resEvent = this.mapToAppData(response);\n\t\t\t\tthis.setState({\n\t\t\t\t\tevent: resEvent,\n\t\t\t\t\terror: false,\n\t\t\t\t\terrorMsg: \"\",\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: true,\n\t\t\t\t\terrorMsg: \"Oh no! There were no matching results!\"\n\t\t\t\t});\n\t\t\t\tthis.props.data.location[0] = \"\";\n\t\t\t\tthis.props.data.artist = \"\";\n\t\t\t\t\n\t\t\t}\n\t\t});\n\t};\n\tcomponentDidMount() {\n\t\tthis.runAxios();\n\t};\n\tcomponentDidUpdate() {\n\t\tthis.runAxios();\n\t};\n\thandleError = (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({\n\t\t\terror: false,\n\t\t});\n\t};\n\trender() {\n\t\tconst {filterPrice, error} = this.state\n\t\treturn (\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<section className=\"budgetFilter\">\n\t\t\t\t\t<h2>{this.state.errorMsg}</h2>\n\t\t\t\t\t<p>Filter results for your budget: </p>\n\t\t\t\t\t\t\n\t\t\t\t\t<select value={filterPrice} onChange={(e) => this.handleChange(e)}>\n\t\t\t\t\t\t<option value=\"0\">All</option>\n\t\t\t\t\t\t<option value=\"25\">$25 or Less</option>\n\t\t\t\t\t\t<option value=\"50\">$50 or Less</option>\n\t\t\t\t\t\t<option value=\"75\">$75 or Less</option>\n\t\t\t\t\t\t<option value=\"100\">$100 or Less</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<button onClick={(e) => this.showFiltered(e)}>Filter</button>\n\t\t\t\t</section>\n\n\t\t\t\t<section className=\"concertCards\">\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.isFiltered === false ?\n\t\t\t\t\t\tthis.state.event.map(event => this.renderConcertCell(event)) :\n\t\t\t\t\t\tthis.state.filteredResults.map(event => this.renderConcertCell(event)) \n\t\t\t\t\t}\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n}};\n\nexport default ConcertCard;","import React, {Component, Fragment} from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ConcertCard from './ConcertCard';\nimport './Search.css'\n\nclass Search extends Component {\n  constructor() {\n        super();\n        this.state = {\n            cityNames: [],\n            userLocationSplit: [],\n            userLocation: '',\n            userArtist: '',\n\t\t    displayDropdown: false,\n            data: {}\n      }\n  }\n\n  findCity = (input) => {\n    axios({    \n        method: 'GET',\n        url: 'https://proxy.hackeryou.com',\n        dataType: 'jsonp',\n        params: {\n            method: 'GET',\n            reqUrl: `http://gd.geobytes.com/AutoCompleteCity?q=${input}&sort=size&`,\n            proxyHeaders: {\n                header_params: 'value'\n            },\n            xmlToJSON: false\n        }\n    }).then(res => {\n        this.setState({\n            cityNames: res.data\n        })\n        if (res.data.length >= 1) {\n            this.setState({\n                displayDropdown: true\n            })\n        }\n    });\n}\n\nhandleInputChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n    if (e.target.name === 'userLocation' & e.target.value.length >= 3) {\n        this.findCity(e.target.value)\n    } else {\n        this.setState({\n            cityNames: [],\n            displayDropdown: false\n        })\n    }\n}\n\nhandleLocation = (e) => {\n    e.preventDefault();\n    const location = e.target.value.split(', ');\n    this.setState({\n        userLocationSplit: location,\n        userLocation: e.target.value,\n        displayDropdown: false\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault();        \n    const userArtist = this.state.userArtist;\n    const userLocation = this.state.userLocationSplit;\n\t\tthis.setState({\n            data: {\n                artist: userArtist,\n                location: userLocation,\n            },\n            userLocation: '',\n            userArtist: '',\n        })\n}\n\n    render() {\n        const {userLocation, userArtist, displayDropdown, cityNames, data} = this.state;\n        return(\n            <Fragment>\n                <div className=\"search wrapper\">\n                    <form className=\"wrapper\">\n                        <label htmlFor=\"userLocation\">Location</label>\n                        <span className=\"input__container\">\n                            <input onChange={this.handleInputChange} type=\"text\" name=\"userLocation\" value={userLocation}/>\n                            {displayDropdown ? \n                                <div className=\"city-options\">\n                                    <ul>\n                                        {cityNames.map(city => {\n                                            return <li key={city.replace(/ /g, '')}><button value={city} onClick={this.handleLocation}>{city}</button></li>\n                                        })}\n                                    </ul>\n                                </div> : \n                                null }\n                        </span>\n                        <label htmlFor=\"userArtist\">Artist</label>\n                        <input onChange={this.handleInputChange} type=\"text\" name=\"userArtist\" value={userArtist}/>\n                        <button onClick={this.handleSubmit}>\n                            <Link to=\"/event/\">\n                                Search\n                            </Link>\n                        </button>\n                    </form>\n                </div>\n                {data.location || data.artist ? \n                    <Route exact path=\"/event/\">\n                    <ConcertCard data={data} /> \n                    </Route> :\n                    null }\n            </Fragment>\n        )\n\t\t}\n\t\t\n}\n\nexport default Search;","import React, {Component, Fragment} from 'react';\nimport firebase from './firebase';\n\n\nclass Landing extends Component {\n  constructor() {\n      super();\n      this.state = {\n          newName: '',\n          newList: '',\n          newBudget: '',\n          published: false\n      }\n  }\n    render() {\n        const {newName, newList, newBudget} = this.props.data\n        return(\n                <div className=\"wrapper header__wrapper\">\n                    <section className=\"header__left\">\n                        <h1>Concert\n                        <br/>Accountant</h1>\n                        <h2>Set your budget.\n                        <br/>Browse concerts.\n                        <br/>Add them to your list.\n                        <br/>Let us worry about the math.</h2>\n                    </section>\n                    <section className=\"header__right\">\n                        <h4>Start budgeting <em>now</em>:</h4>\n                        <hr/>\n                        <form className=\"header__form\">\n                            <label htmlFor=\"newName\">Your name</label>\n                            <input onChange={this.props.handleInputChange}  name=\"newName\" type=\"text\" value={newName}/>\n                            <label htmlFor=\"newList\">Your list</label>\n                            <input onChange={this.props.handleInputChange}  name=\"newList\" type=\"text\" value={newList}/>\n                            <label htmlFor=\"newBudget\">Your budget</label>\n                            <input onChange={this.props.handleInputChange}  name=\"newBudget\" type=\"text\" value={newBudget}/>\n                            <button onClick={this.props.handleSubmit}>Start now</button>\n                        </form>\n                    </section>\n                </div>\n        )\n    }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport \"./App.css\";\nimport firebase from './firebase';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from './Navbar.js';\nimport MyLists from './MyLists';\nimport Login from './Login.js';\nimport ConcertDetailsPopUp from './ConcertDetailsPopUp.js';\nimport Search from './Search.js';\nimport ConcertCard from './ConcertCard.js';\nimport Landing from './Landing.js'\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tnewName: '',\n            newList: '',\n\t\t\tnewBudget: '',\n\t\t\tpublished: false,\n\t\t\tuserSessionKey: ''\n\t\t}\n\t}\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst {newName, newList, newBudget, published} = this.state;\n\t\tconst userInfo = {\n\t\t\tname: newName,\n            allLists: {\n\t\t\t\tlistName: newList,\n\t\t\t\tpublished: published,\n\t\t\t\tbudgetList: true,\n\t\t\t\tbudget: newBudget,\n\t\t\t},\n\t\t};\n        const dbRef = firebase.database().ref();\n\t\tconst key = dbRef.push(userInfo).getKey();\n        console.log(key);\n        this.setState({\n\t\t\tnewList: '',\n\t\t\tnewBudget: '',\n\t\t\tuserSessionKey: key\n        })\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Router basename=\"/\">\n\t\t\t\t<MyLists />\n\t\t\t<div className=\"App\">\n\t\t\t\t\t\n\t\t\t\t\t{this.state.userSessionKey ? <MyLists id={this.state.userSessionKey} /> : null}\n\t\t\t\t<header>\n      \t\t\t\t<Navbar/>\n\t\t\t\t\t<Landing handleInputChange={this.handleInputChange} handleSubmit={this.handleSubmit} data={this.state}/>\n\t\t\t\t</header>\n\t\t\t\t<main>\n\t\t\t\t\t<Search />\n      \t\t\t\t<Route path=\"/login/\" component={Login} />\n\t\t\t\t\t{/* <Route exact path=\"/event/\" component={ConcertCard} />\n\t\t\t\t\t{/* Show concert details */}\n\t\t\t\t\t{/* {/* <Route exact path=\"/event/:eventID\" component={ConcertDetailsPopUp}> */}\n\t\t\t\t\t<Route exact path=\"/event/:eventID\">\n\t\t\t\t\t\t<ConcertDetailsPopUp id={this.state.userSessionKey} />\n\t\t\t\t\t</Route> */}\n\t\t\t\t</main>\n\t\t\t\t</div> \n\t\t\t</Router>\n\t\t);\n\n\t}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}