{"version":3,"sources":["firebase.js","Navbar.js","Login.js","ConcertDetailsPopUp.js","ConcertCard.js","Search.js","Landing.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Navbar","className","to","Component","Login","handleRadioChange","e","isUserNew","target","value","setState","userNew","userEmailError","userCityError","validateInput","input","field","name","stateError","userName","userEmail","userPassword","userCity","test","console","log","handleInputChange","handleSubmit","preventDefault","state","userNameError","userPasswordError","isLoggedIn","isLoggedOn","this","space","onChange","htmlFor","type","id","onClick","ConcertDetailsPopUp","modalEvent","artist","d","newDate","Date","setTime","getTime","toDateString","axios","url","props","match","params","eventID","method","responseType","apikey","locale","segment","then","response","res","data","dateStr","dates","start","localDate","dateFormat","dateConvert","_embedded","attractions","map","art","venue","venues","location","city","country","info","date","status","code","toUpperCase","imgUrl","images","tickets","src","alt","href","ConcertCard","event","filteredResults","isFiltered","filterPrice","priceRanges","currency","min","toFixed","max","cityCountry","dateNum","parse","price","collectPrice","filterResults","parseFloat","entry","key","eventCopy","filter","keyword","undefined","segmentName","alert","window","reload","events","resEvent","mapToAppData","runAxios","handleChange","showFiltered","renderConcertCell","Search","findCity","dataType","reqUrl","proxyHeaders","header_params","xmlToJSON","cityNames","length","displayDropdown","handleLocation","split","userLocationSplit","userLocation","userArtist","replace","exact","path","App","basename","Landing","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b8655e2b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Initalize Firebase\nconst config = {\n\tapiKey: \"AIzaSyBymJrYdY1TNmwZwPPOIY02q6t3EBz3WUU\",\n\tauthDomain: \"concert-accountant-cca1f.firebaseapp.com\",\n\tdatabaseURL: \"https://concert-accountant-cca1f.firebaseio.com\",\n\tprojectId: \"concert-accountant-cca1f\",\n\tstorageBucket: \"concert-accountant-cca1f.appspot.com\",\n\tmessagingSenderId: \"357158929786\",\n\tappId: \"1:357158929786:web:6fefa320d3defb953ec2c3\"\n};\nfirebase.initializeApp(config);\n\n// This exports the configuerd version of firebase\nexport default firebase;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"navBar\">\n\t\t\t\t<ul className=\"wrapper\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link className=\"link\" to=\"/login/\">\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link className=\"link\" to=\"/event/\">\n\t\t\t\t\t\t\tEvents\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link className=\"link\" to=\"/list/\">\n\t\t\t\t\t\t\tList\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t)\n\t}\n}\n\nexport default Navbar;","import React, {Component, Fragment} from 'react';\nimport './Login.css'\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isLoggedOn: false,\n            userNew: true,\n            userName: '',\n            userEmail: '',\n            userPassword: '',\n            userCity: '',\n            userNameError: false,\n            userEmailError: false,\n            userPasswordError: false,\n            userCityError: false\n        }\n    }   \n    handleRadioChange = (e) => {\n        const isUserNew = e.target.value === \"true\" ? true : false;\n            this.setState({\n                userNew: isUserNew,\n                userEmailError: false,\n                userCityError: false\n            })\n    }\n    // on component did mount, grab DB info & list of usernames to toss in state\n    validateInput = (input) => {\n        const field = input.name;\n        const inputRegex = {\n            // username must be between 5 and 10 characters\n            userName: /^[a-z0-9]([._](?![._])|[a-z0-9])[a-z0-9]{3,8}$/,\n            // email must be email format\n            userEmail: /^([a-z0-9_ .-]+)@([\\da-z.-]+)\\.([a-z.]{2,6})$/,\n            // password 6-20 characters\n            userPassword: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/,\n            // city only allows letters, special letter characters, and punctuation regularly found in city names\n            userCity: /^([a-zA-Z\\u0080-\\u024F]+(?:. |-| |'))*[a-zA-Z\\u0080-\\u024F]*$/\n        }\n        const stateError = field + \"Error\";\n        if (inputRegex[field].test(input.value)) {\n            input.className = \"fieldSuccess\";\n            console.log(stateError);\n            this.setState({\n                [stateError]: false\n            })\n            // add function to look through usernames to check for matches if pattern is valid and display new error\n        } else {\n            input.className = \"fieldError\"\n            this.setState({\n                [stateError]: true\n            })\n        }\n    }\n    handleInputChange = (e) => {\n        this.validateInput(e.target);\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (!this.state.userNameError && !this.state.userEmailError && !this.state.userPasswordError && !this.state.userCityError) {\n            this.setState({\n                isLoggedIn: true\n            })\n            // call function to set App state to show user is logged in\n            // call function to hide landing page\n            // const dbRef = firebase.database().ref();\n            // dbRef.push(this.state); (will be modified to only push the login data)\n        } else {\n            // some sort of notification about fixing \n        }\n    }\n\n  render() {\n    const {userNew, userName, userEmail, userPassword, userCity, userNameError, userEmailError, userPasswordError, userCityError} = this.state\n      const space = <span className=\"form__space\"></span>;\n        return(\n            <div className=\"Form wrapper\">\n                <form>\n                    <fieldset onChange={this.handleRadioChange} value={userNew}>\n                        <div className={userNew ? \"form--active radio\" : \"radio\"}>\n                            <label htmlFor=\"signUp\">Sign Up</label>\n                            <input className=\"sr-only\" type=\"radio\" name=\"userNew\" id=\"signUp\" value=\"true\"/>\n                        </div>\n                        <div className={!userNew ? \"form--active radio\" : \"radio\"}>\n                            <label htmlFor=\"logIn\">Log In</label>\n                            <input className=\"sr-only\" type=\"radio\" name=\"userNew\" id=\"logIn\" value=\"false\"/>\n                        </div>\n                    </fieldset>\n                    <div className=\"form__container\">\n                        <label htmlFor=\"userName\">Username</label>\n                        <input onChange={this.handleInputChange} type=\"text\" name=\"userName\" value={userName}/>\n                        {userNameError ? <p>Username must be between 5 and 8 characters</p> : space}\n                        {userNew ? \n                            <Fragment>\n                                <label htmlFor=\"userEmail\">Email address</label>\n                                <input onChange={this.handleInputChange} type=\"email\" name=\"userEmail\" value={userEmail}/>\n                                {userEmailError ? <p>Please enter a valid email address</p> : space}\n                            </Fragment>: \n                            null}\n                        <label htmlFor=\"userPassword\">Password</label>\n                        <input onChange={this.handleInputChange} type=\"password\" name=\"userPassword\" value={userPassword}/>\n                        {userPasswordError ? <p>Password must be between 6 and 8 characters</p> : space}\n                        {userNew ? \n                        <Fragment>\n                            <label htmlFor=\"userCity\">Home city</label>\n                            <input onChange={this.handleInputChange} type=\"text\" name=\"userCity\" id={userCity}/>\n                            {userCityError ? <p>Please remove special characters</p> : space}\n                        </Fragment> :\n                        null}\n                        <button onClick={this.handleSubmit}>{userNew ? \"Sign Up\" : \"Login\"}</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login;\n","import React, {Component} from \"react\";\nimport axios from 'axios';\nimport \"./ConcertDetailsPopUp.css\";\n\nclass ConcertDetailsPopUp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.state = {\n\t\t\tmodalEvent: {\n\t\t\t\tartist: [],\n\t\t\t},\n\t\t}\n\t}\n\n\tdateConvert(d) {\n\t\tlet newDate = new Date(d);\n\t\t\n\t\tnewDate = new Date(newDate.setTime(newDate.getTime() + 1 * 86400000));\n\n\t\tconst date = newDate.toDateString();\n\n\t\treturn date;\n\t};\n\n\tcomponentDidMount() {\n\t\taxios({\n\t\t\turl: `https://app.ticketmaster.com/discovery/v2/events/${this.props.match.params.eventID}`,\n\t\t\tmethod: \"GET\",\n\t\t\tresponseType: \"JSON\",\n\t\t\tparams: {\n\t\t\t\tapikey: \"Mh0RGGBfkgADAASrXM25WfhUueio9rgV\",\n\t\t\t\tlocale: \"en-us\",\n\t\t\t\tsegment: \"music\",\n\t\t\t}\n\t\t}).then(response => {\t\t\t\n\t\t\tconst res = response.data;\n\t\t\t\n\t\t\tconst dateStr = res.dates.start.localDate;\n\t\t\t// const dateNum = Date.parse(dateStr);\n\t\t\tconst dateFormat = this.dateConvert(dateStr)\n\t\t\t\n\t\t\tconst artist = res._embedded.attractions.map(art => {\n\t\t\t\treturn art.name\n\t\t\t})\n\n\t\t\tthis.setState({\n\t\t\t\tmodalEvent: {\n\t\t\t\t\teventID: res.id, \n\t\t\t\t\tname: res.name, \n\t\t\t\t\tvenue: res._embedded.venues[0].name, \n\t\t\t\t\tlocation: { \n\t\t\t\t\t\tcity: res._embedded.venues[0].city.name, \n\t\t\t\t\t\tcountry: res._embedded.venues[0].country.name,\n\t\t\t\t\t},\n\t\t\t\t\tinfo: res.info,\n\t\t\t\t\t// date: {\n\t\t\t\t\t// \tdateStr,\n\t\t\t\t\t// \tdateNum,\n\t\t\t\t\t// \tdateFormat,\n\t\t\t\t\t// },\n\t\t\t\t\tdate: dateFormat,\n\t\t\t\t\tstatus: (res.dates.status.code).toUpperCase(),\n\t\t\t\t\timgUrl: res.images[0].url,\n\t\t\t\t\ttickets: res.url,\n\t\t\t\t\tartist,\n\t\t\t\t\t// priceRange: {\n\t\t\t\t\t\t// min: res.priceRanges[0].min,\n\t\t\t\t\t\t// max: res.priceRanges[0].max,\n\t\t\t\t\t// },\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"modalContainer\">\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"modalContent\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>{this.state.modalEvent.name}</h1>\n\t\t\t\t\t\t<h2> @ {this.state.modalEvent.venue}</h2>\n\t\t\t\t\t\t<h3>{this.state.modalEvent.date}</h3>\n\n\t\t\t\t\t\t<div className=\"modalImage\">\n\t\t\t\t\t\t\t<img src={this.state.modalEvent.imgUrl} alt={this.state.modalEvent.name}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modalEvent\">\n\t\t\t\t\t\t<div className=\"modalEventDetails\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.modalEvent.status === \"CANCELLED\"\n\t\t\t\t\t\t\t\t? <h3>{this.state.modalEvent.status}</h3> :\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<h3>{this.state.modalEvent.status}</h3>\n\t\t\t\t\t\t\t\t\t<h3>Tickets start at </h3>\n\t\t\t\t\t\t\t\t\t<h3>Featuring: </h3>\n\t\t\t\t\t\t\t\t\t<ul>\n\n\t\t\t\t\t\t\t\t\t\t{this.state.modalEvent.artist.map(art => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t{art}\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t)})}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<h3>{this.state.modalEvent.info}</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"modalButtons\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.modalEvent.status === \"CANCELLED\" \n\t\t\t\t\t\t\t\t? <button>Add to Wishlist</button>\n\t\t\t\t\t\t\t\t: <>\n\t\t\t\t\t\t\t\t\t<button>Add to Wishlist</button>\n\t\t\t\t\t\t\t\t\t<button>Add to List</button>\n\n\t\t\t\t\t\t\t\t\t<a href={this.state.modalEvent.tickets}>\n\t\t\t\t\t\t\t\t\t\t<button>Buy Tickets</button>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\n\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ConcertDetailsPopUp;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport \"./ConcertCard.css\";\nimport ConcertDetailsPopUp from './ConcertDetailsPopUp';\n\nclass ConcertCard extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tevent: [],\n\t\t\tmodalEvent: \"\",\n\t\t\tfilteredResults: [],\n\t\t\tisFiltered: false,\n\t\t\tfilterPrice: \"0\",\n\t\t};\t\t\n\t};\n\n\t// Function to convert date from YYYY-MM-DD format to Weekday Month Day Year format\n\tdateConvert(d) {\n\t\tlet newDate = new Date(d);\n\t\t\n\t\tnewDate = new Date(newDate.setTime(newDate.getTime() + 1 * 86400000));\n\n\t\tconst date = newDate.toDateString();\n\n\t\treturn date;\n\t};\n\n\tcollectPrice (data) {\n\t\tif (data.priceRanges) {\n\t\t\treturn ({\n\t\t\t\ttype: data.priceRanges[0].type,\n\t\t\t\tcurrency: data.priceRanges[0].currency,\n\t\t\t\tmin: `${data.priceRanges[0].min.toFixed(2)}`,\n\t\t\t\tmax: `${data.priceRanges[0].max.toFixed(2)}`,\n\t\t\t\t\n\t\t\t})\n\t\t} else {\n\t\t\treturn ({\n\t\t\t\ttype: false,\n\t\t\t\tcurrency: false,\n\t\t\t\tmin: \"N/A\",\n\t\t\t\tmax: \"N/A\",\n\t\t\t})\n\t\t}\n\t}\n\n\t// Function to parse data\n\tmapToAppData(res)  {\n\t\tconst resEvent = res.map( (data) => {\n\t\t\t// To get ID\n\t\t\tconst eventID = data.id;\n\t\t\t\n\t\t\t// To get the name of the artist\n\t\t\tconst name = data.name;\n\t\t\t\n\t\t\t// To get the venue\n\t\t\tconst venue =  data._embedded.venues[0].name;\n\n\t\t\t// To get city, country, and City, Country combo as some entries will not have a state value (ie: Canada has provinces, not states)\n\t\t\tconst city = data._embedded.venues[0].city.name;\n\t\t\t\n\t\t\tconst country = data._embedded.venues[0].country.name;\n\t\t\t\n\t\t\tconst cityCountry = `${city}, ${country}`;\n\t\t\t\n\t\t\t// To get Date\n\t\t\tconst dateStr = data.dates.start.localDate;\n\n\t\t\tconst dateFormat = this.dateConvert(dateStr);\n\n\t\t\tconst dateNum = Date.parse(dateStr);\n\n\t\t\t// To get image\n\t\t\tconst imgUrl = data.images[2].url;\n\n\t\t\t// To get price\n\t\t\tconst price = this.collectPrice(data);\n\n\t\t\t// Return obj to push to this.state.event\n\t\t\treturn ({\n\t\t\t\teventID,\n\t\t\t\tname,\n\t\t\t\tvenue,\n\t\t\t\tlocation: {\n\t\t\t\t\tcity,\n\t\t\t\t\tcountry,\n\t\t\t\t\tcityCountry,\n\t\t\t\t},\n\t\t\t\tdate: {\n\t\t\t\t\tdateStr,\n\t\t\t\t\tdateNum,\n\t\t\t\t\tdateFormat\n\t\t\t\t},\n\t\t\t\timgUrl,\n\t\t\t\t// tickets,\n\t\t\t\tprice,\n\t\t\t});\t\t\n\t\t})\n\t\treturn resEvent;\n\t};\n\t//Update this.state.filterPrice on select\n\thandleChange(event) {\n\n\t\tthis.filterResults(event.target.value);\n\n\t\tthis.setState({\n\t\t\tfilterPrice: parseFloat(event.target.value),\n\t\t})\n\t}\n\n\trenderConcertCell(entry) {\n\t\treturn (\n\t\t\t\t\t\n\t\t\t<div key={entry.eventID} className=\"concertCell\">\n\t\t\t\t<Link to={`/event/${entry.eventID}`}>\n\t\t\t\t<div className=\"imageContainer\">\n\n\t\t\t\t\t<img src={entry.imgUrl} alt={entry.name} />\t\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"concertInfo\">\n\t\t\t\t\t<h2>{entry.name}</h2>\n\t\t\t\t\t<p>{entry.date.dateFormat}</p>\n\t\t\t\t\t\n\t\t\t\t\t{entry.price.min === 'N/A' \n\t\t\t\t\t\t? <p>No prices currently available.</p>\n\t\t\t\t\t\t: <p>Prices starting as low as ${entry.price.min}</p>}\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n\n\tfilterResults() {\n\t\tconst eventCopy = this.state.event;\n\t\tlet price = parseFloat(this.state.filterPrice);\n\n\t\tconst filteredResults = eventCopy.filter((event) => {\n\t\t\t\tconst shouldFilter = parseFloat(event.price.min) <= parseFloat(price)\n\n\t\t\t\treturn shouldFilter\n\t\t})\n\n\t\tthis.setState({\n\t\t\tfilteredResults,\n\t\t})\n\t}\n\n\tshowFiltered() {\n\t\tlet isFiltered = true;\n\n\t\tif (this.state.filterPrice == \"0\") {\n\t\t\tisFiltered = false;\n\t\t} else {\n\t\t\tisFiltered = true;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tisFiltered,\n\t\t})\n\n\t\tthis.filterResults();\n\t}\n\n\trunAxios() {\n\t\t// let city = this.props.data.location[0] || \"Toronto\";\n\t\t// let keyword = this.props.data.artist || \"\";\n\n\t\tlet city = \"\";\n\t\tlet keyword = \"\";\n\n\t\tif (this.props.data === undefined) {\n\t\t\tcity = \"Toronto\";\n\t\t} else {\n\t\t\tcity = this.props.data.location[0]\n\t\t}\n\n\t\tif (this.props.data === undefined) {\n\t\t\tkeyword = \"\";\n\t\t} else {\n\t\t\tkeyword = this.props.data.artist\n\t\t}\n\n\t\taxios({\n\t\t\turl: \"https://app.ticketmaster.com/discovery/v2/events\",\n\t\t\tmethod: \"GET\",\n\t\t\tresponseType: \"JSON\",\n\t\t\tparams: {\n\t\t\t\tapikey: \"Mh0RGGBfkgADAASrXM25WfhUueio9rgV\",\n\t\t\t\tsegmentName: \"music\",\n\t\t\t\tcity,\n\t\t\t\tkeyword,\n\t\t\t}\n\t\t}).then(response => {\n\t\t\t\n\t\t\tif (!response.data._embedded) {\n\t\t\t\talert(\"No valid results\");\n\t\t\t\twindow.location.reload(false);\n\t\t\t}\n\n\t\t\tconst res = response.data._embedded.events;\n\t\t\t\n\t\t\tconst resEvent = this.mapToAppData(res);\n\n\t\t\tthis.setState({\n\t\t\t\tevent: resEvent,\n\t\t\t})\n\t\t})\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.runAxios();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.runAxios();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"wrapper\">\n\t\t\t<div className=\"budgetFilter\">\n\t\t\t\t<p>Filter results for your budget: </p>\n\t\t\t\t<select value={this.state.filterPrice} onChange={(e) => this.handleChange(e)}>\n\t\t\t\t\t<option value=\"0\">All</option>\n\t\t\t\t\t<option value=\"25\">$25 or Less</option>\n\t\t\t\t\t<option value=\"50\">$50 or Less</option>\n\t\t\t\t\t<option value=\"75\">$75 or Less</option>\n\t\t\t\t\t<option value=\"100\">$100 or Less</option>\n\t\t\t\t</select>\n\t\t\t\t<button onClick={(e) => this.showFiltered(e)}>Filter</button>\n\t\t\t</div>\n\t\t\t<div className=\"concertCards\">\n\t\t\t\n\t\t\t{\n\t\t\t\tthis.state.isFiltered === false \n\t\t\t\t? this.state.event.map(event => this.renderConcertCell(event)) \n\t\t\t\t: this.state.filteredResults.map(event => this.renderConcertCell(event)) \n\t\t\t}\n\n\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t\n}}\n\nexport default ConcertCard;","import React, {Component, Fragment} from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ConcertCard from './ConcertCard';\nimport './Search.css'\n\nclass Search extends Component {\n  constructor() {\n        super();\n        this.state = {\n            cityNames: [],\n            userLocationSplit: [],\n            userLocation: '',\n            userArtist: '',\n\t\t    displayDropdown: false,\n            data: {}\n      }\n  }\n\n  findCity = (input) => {\n    axios({    \n        method: 'GET',\n        url: 'https://proxy.hackeryou.com',\n        dataType: 'jsonp',\n        params: {\n            method: 'GET',\n            reqUrl: `http://gd.geobytes.com/AutoCompleteCity?q=${input}&sort=size&`,\n            proxyHeaders: {\n                header_params: 'value'\n            },\n            xmlToJSON: false\n        }\n    }).then(res => {\n        this.setState({\n            cityNames: res.data\n        })\n        if (res.data.length >= 1) {\n            this.setState({\n                displayDropdown: true\n            })\n        }\n    });\n}\n\nhandleInputChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n    if (e.target.name === 'userLocation' & e.target.value.length >= 3) {\n        this.findCity(e.target.value)\n    } else {\n        this.setState({\n            cityNames: [],\n            displayDropdown: false\n        })\n    }\n}\n\nhandleLocation = (e) => {\n    e.preventDefault();\n    const location = e.target.value.split(', ');\n    this.setState({\n        userLocationSplit: location,\n        userLocation: e.target.value,\n        displayDropdown: false\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault();        \n    const userArtist = this.state.userArtist;\n    const userLocation = this.state.userLocationSplit;\n\t\tthis.setState({\n            data: {\n                artist: userArtist,\n                location: userLocation,\n            },\n            userLocation: '',\n            userArtist: '',\n        })\n}\n\n    render() {\n        const {userLocation, userArtist, displayDropdown, cityNames, data} = this.state;\n        return(\n            <Fragment>\n                <div className=\"search\">\n                    <form>\n                        <label htmlFor=\"userLocation\">Location</label>\n                        <span className=\"input__container\">\n                            <input onChange={this.handleInputChange} type=\"text\" name=\"userLocation\" value={userLocation}/>\n                            {displayDropdown ? \n                                <div className=\"city-options\">\n                                    <ul>\n                                        {cityNames.map(city => {\n                                            return <li key={city.replace(/ /g, '')}><button value={city} onClick={this.handleLocation}>{city}</button></li>\n                                        })}\n                                    </ul>\n                                </div>: \n                                null }\n                        </span>\n                        <label htmlFor=\"userArtist\">Artist</label>\n                        <input onChange={this.handleInputChange} type=\"text\" name=\"userArtist\" value={userArtist}/>\n                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={this.handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/event/\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link></button>\n\t\t\t\t\t\t\t\t\t\t\t\t\n                    </form>\n                </div>\n\n\t\t\t\t\t\t\t\t{data.location || data.artist \n\t\t\t\t\t\t\t\t? <Route exact path=\"/event/\">\n\t\t\t\t\t\t\t\t\t\t<ConcertCard data={data} />\n\t\t\t\t\t\t\t\t\t</Route> \n\t\t\t\t\t\t\t\t: null }\n\n            </Fragment>\n        )\n\t\t}\n\t\t\n}\n\nexport default Search;","import React, {Component} from 'react';\n\nclass Login extends Component {\n  constructor() {\n      super();\n  }\n\n    render() {\n        return(\n            <h2>HELLO</h2>\n        )\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport \"./App.css\";\nimport firebase from './firebase';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from './Navbar.js';\nimport Login from './Login.js';\nimport ConcertDetailsPopUp from './ConcertDetailsPopUp.js';\nimport Search from './Search.js';\nimport ConcertCard from './ConcertCard.js';\nimport Landing from './Landing.js'\n\n\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router basename=\"/\">\n\t\t\t<div className=\"App\">\n\t\t\t\t<header>\n      \t\t\t\t<Navbar/>\n\t\t\t\t\t<Landing/>\n\t\t\t\t</header>\n\t\t\t<Search />\n      \t\t<Route path=\"/login/\" component={Login} />\n\n\t\t\t\t\t{/* <Route exact path=\"/event/\" component={ConcertCard} /> */}\n\n\t\t\t\t\t{/* Show concert details */}\n\t\t\t<Route exact path=\"/event/:eventID\" component={ConcertDetailsPopUp} />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}