{"version":3,"sources":["firebase.js","Navbar.js","MyLists.js","Login.js","ConcertDetailsPopUp.js","ConcertCard.js","Search.js","Landing.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Navbar","className","to","Component","MyLists","handlePublish","e","preventDefault","list","target","name","sessionID","props","id","database","ref","child","update","published","state","listDetails","this","on","response","data","val","setState","wishlist","onClick","href","Login","handleRadioChange","isUserNew","value","userNew","userEmailError","userCityError","validateInput","input","field","stateError","userName","userEmail","userPassword","userCity","test","console","log","handleInputChange","handleSubmit","userNameError","userPasswordError","isLoggedIn","isLoggedOn","space","onChange","htmlFor","type","ConcertDetailsPopUp","modalEvent","artist","d","newDate","Date","setTime","getTime","toDateString","axios","url","match","params","eventID","method","responseType","apikey","locale","segment","then","minPrice","res","dateStr","dates","start","localDate","dateFormat","dateConvert","priceRanges","min","toFixed","_embedded","attractions","map","art","venue","venues","location","city","country","info","date","status","code","toUpperCase","imgUrl","images","tickets","src","alt","ConcertCard","handleError","error","event","filteredResults","isFiltered","filterPrice","errorMsg","searchCity","searchArtist","currency","max","events","cityCountry","dateNum","parse","price","collectPrice","filterResults","parseFloat","entry","key","eventCopy","filter","keyword","segmentName","resEvent","mapToAppData","runAxios","handleChange","showFiltered","renderConcertCell","Search","findCity","dataType","reqUrl","proxyHeaders","header_params","xmlToJSON","cityNames","length","displayDropdown","handleLocation","split","userLocationSplit","userLocation","userArtist","replace","exact","path","Landing","newName","newList","newBudget","App","userInfo","budgetList","budget","push","getKey","userSessionKey","basename","component","render","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b41414da.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Initalize Firebase\nconst config = {\n\tapiKey: \"AIzaSyBymJrYdY1TNmwZwPPOIY02q6t3EBz3WUU\",\n\tauthDomain: \"concert-accountant-cca1f.firebaseapp.com\",\n\tdatabaseURL: \"https://concert-accountant-cca1f.firebaseio.com\",\n\tprojectId: \"concert-accountant-cca1f\",\n\tstorageBucket: \"concert-accountant-cca1f.appspot.com\",\n\tmessagingSenderId: \"357158929786\",\n\tappId: \"1:357158929786:web:6fefa320d3defb953ec2c3\"\n};\nfirebase.initializeApp(config);\n\n// This exports the configuerd version of firebase\nexport default firebase;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"navBar\">\n\t\t\t\t<ul className=\"wrapper\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link className=\"link\" to=\"/login/\">\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link className=\"link\" to=\"/event/\">\n\t\t\t\t\t\t\tEvents\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link className=\"link\" to=\"/list/\">\n\t\t\t\t\t\t\tList\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t)\n\t}\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport './Dashboard.css';\nimport firebase from './firebase';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nclass MyLists extends Component {\n  constructor() {\n      super();\n      this.state = {\n        listDetails: {},\n\n      }\n  }\n\n  // dbRef.push(userInfo)\n\n//    // Get a key for a new Post.\n//    var newPostKey = firebase.database().ref().child('posts').push().key;\n\n//    // Write the new post's data simultaneously in the posts list and the user's post list.\n//    var updates = {};\n//    updates['/posts/' + newPostKey] = postData;\n//    updates['/user-posts/' + uid + '/' + newPostKey] = postData;\n \n//    return firebase.database().ref().update(updates);\n//  }\n \n\n  // https://console.firebase.google.com/project/concert-accountant-cca1f/database/concert-accountant-cca1f/data/-MBHHUuah2kyAgF_s_2d\n\n\n  \n  componentDidMount() {\n    // const sessionID = '-MBHHUuah2kyAgF_s_2d';\n    const sessionID = this.props.id;\n    const dbRef = firebase.database().ref(`/${sessionID}`);\n    // const key = dbRef.push(userInfo);\n    // console.log(dbRef);\n    dbRef.on('value', (response) => {\n      const data = response.val();\n      // console.log(data);\n      this.setState({ \n        listDetails: data,\n      })\n      // console.log(this.props.id);\n      // for(key in data) {\n        // this.state \n        // }\n      }\n      );\n    }\n    \n    //have to figure out what needs to happen to pull session key into state\n    // The key is \n    // -MBGveceho8kTcigOPXt\n    //How do I do that?\n    \n    //onClick=publishList\n    //prevent default\n  //\n  \n  //find key related to list\n  \n  //use a for in loop to grab the key\n  \n  //firebase.databse().ref(`)\n  \n  handlePublish = (e) => {\n    e.preventDefault();\n    const list = e.target.name;\n    const sessionID = this.props.id;\n    const dbRef = firebase.database().ref(`/${sessionID}`).child(list);\n    const updateObject = {\n    published: true,\n\n};\n\n    dbRef.update(updateObject);\n    // dbRef.on('value', (response) => {\n    //   const data = response.val();\n    //   console.log(data);\n    //   data.update('true');\n    // });\n    \n    // this.setState({\n    //   [list]: !published,\n    //   // {\n    //   //   published: true,\n    //   // }\n    // })\n  }\n\n\n\n  render() {\n    const {listDetails} = this.state; \n    const wishlist = listDetails.wishlist;\n    // console.log(this.props)\n    return(\n      <div className=\"profileDiv\">\n        <h2>{listDetails.name}'s List</h2>\n        <ul>\n          <li>\n            {/* {listDetails[wishlist].name} */}\n            {/* {console.log(wishlist.value)} */}\n          </li>\n        </ul>\n      <button onClick={this.handlePublish} name=\"wishlist\">Publish</button>\n        <h3><a href=\"#\" className=\"profilePopup\">Some Music Lists</a></h3>\n        <h3>Wish Lists\\</h3>1\n        <h3>Budget List</h3>\n        </div>\n\n    );\n    }\n  }\n  \n  export default MyLists;\n  \n// export default LocalLists;\n\n// import React, {Component} from 'react';\n// import './Dashboard.css';\n// import firebase from './firebase';\n// import './App.css';\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\n// class MyLists extends Component {\n//   constructor() {\n//       super();\n//       // SessionID = -MBGveceho8kTcigOPXt,\n//       this.state = {\n//       \t  newName: '',\n//           newList: '',\n//           newBudget: '',\n// \t\t\t    published: false,\n// \t\t    \tuserSessionKey: ''\n//       }\n//   }\n\n  \n//   componentDidMount() {\n//     const sessionID = this.props.id;\n//     const userSessionKey = '-MBGveceho8kTcigOPXt';\n//     const dbRef = firebase.database().ref(`/SessionID`);\n\n//     dbRef.on('value', (response) => {\n//       const data = response.val();\n//       dbRef.on('value', (user) => {\n//       });\n\n//       const dbRef = firebase.database().ref();\n\n\n//       dbRef.on('value', (data) => {\n\n//       console.log(data.val());\n// });\n//       console.log(this.props.id);\n//       console.log(user.val());\n//       const key = dbRef.push(userInfo);\n//       console.log(dbRef);\n//       console.log(data);\n//       dbRef.on('value', (snapshot) => {\n//         console.log(snapshot.val());\n//       });\n//       for(key in data) {\n//         this.state \n//         }\n//       },\n//       // );\n//     // }\n    \n//     //have to figure out what needs to happen to pull session key into state\n//     // The key is \n//     // -MBGveceho8kTcigOPXt\n//     //How do I do that?\n\n  \n\n//   //find key related to list\n\n//   //use a for in loop to grab the key\n\n//   firebase.databse().ref()\n\n//   render() {\n\n\n//     // console.log(this.props)\n//     return(\n//         <div className=\"profileDiv\">\n//           <h2>Music Lists</h2>\n//         <h3><a href=\"#\" className=\"profilePopup\">Some Music Lists</a></h3>\n//         <h3>Wish Lists</h3>\n//         <h3>Budget List</h3>\n//         </div>\n\n//   );\n//     }\n// }\n\n\n// export default MyLists;\n\n\n","import React, {Component, Fragment} from 'react';\nimport './Login.css'\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isLoggedOn: false,\n            userNew: true,\n            userName: '',\n            userEmail: '',\n            userPassword: '',\n            userCity: '',\n            userNameError: false,\n            userEmailError: false,\n            userPasswordError: false,\n            userCityError: false\n        }\n    }   \n    handleRadioChange = (e) => {\n        const isUserNew = e.target.value === \"true\" ? true : false;\n            this.setState({\n                userNew: isUserNew,\n                userEmailError: false,\n                userCityError: false\n            })\n    }\n    // on component did mount, grab DB info & list of usernames to toss in state\n    validateInput = (input) => {\n        const field = input.name;\n        const inputRegex = {\n            // username must be between 5 and 10 characters\n            userName: /^[a-z0-9]([._](?![._])|[a-z0-9])[a-z0-9]{3,8}$/,\n            // email must be email format\n            userEmail: /^([a-z0-9_ .-]+)@([\\da-z.-]+)\\.([a-z.]{2,6})$/,\n            // password 6-20 characters\n            userPassword: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/,\n            // city only allows letters, special letter characters, and punctuation regularly found in city names\n            userCity: /^([a-zA-Z\\u0080-\\u024F]+(?:. |-| |'))*[a-zA-Z\\u0080-\\u024F]*$/\n        }\n        const stateError = field + \"Error\";\n        if (inputRegex[field].test(input.value)) {\n            input.className = \"fieldSuccess\";\n            console.log(stateError);\n            this.setState({\n                [stateError]: false\n            })\n            // add function to look through usernames to check for matches if pattern is valid and display new error\n        } else {\n            input.className = \"fieldError\"\n            this.setState({\n                [stateError]: true\n            })\n        }\n    }\n    handleInputChange = (e) => {\n        this.validateInput(e.target);\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (!this.state.userNameError && !this.state.userEmailError && !this.state.userPasswordError && !this.state.userCityError) {\n            this.setState({\n                isLoggedIn: true\n            })\n            // call function to set App state to show user is logged in\n            // call function to hide landing page\n            // const dbRef = firebase.database().ref();\n            // dbRef.push(this.state); (will be modified to only push the login data)\n        } else {\n            // some sort of notification about fixing \n        }\n    }\n\n  render() {\n    const {userNew, userName, userEmail, userPassword, userCity, userNameError, userEmailError, userPasswordError, userCityError} = this.state\n      const space = <span className=\"login_form_space\"></span>;\n        return(\n            <div className=\"login_form wrapper\">\n                <form>\n                    <fieldset onChange={this.handleRadioChange} value={userNew}>\n                        <div className={userNew ? \"login_form_active login_radio\" : \"login_radio\"}>\n                            <label htmlFor=\"signUp\"><h4>Sign Up</h4></label>\n                            <input className=\"sr-only\" type=\"radio\" name=\"userNew\" id=\"signUp\" value=\"true\"/>\n                        </div>\n                        <div className={!userNew ? \"login_form_active login_radio\" : \"login_radio\"}>\n                            <label htmlFor=\"logIn\"><h4>Log In</h4></label>\n                            <input className=\"sr-only\" type=\"radio\" name=\"userNew\" id=\"logIn\" value=\"false\"/>\n                        </div>\n                    </fieldset>\n                    <div className=\"login_form_container\">\n                        <label htmlFor=\"userName\">Username</label>\n                        <input onChange={this.handleInputChange} type=\"text\" name=\"userName\" value={userName}/>\n                        {userNameError ? <p>Username must be between 5 and 8 characters</p> : space}\n                        {userNew ? \n                            <Fragment>\n                                <label htmlFor=\"userEmail\">Email address</label>\n                                <input onChange={this.handleInputChange} type=\"email\" name=\"userEmail\" value={userEmail}/>\n                                {userEmailError ? <p>Please enter a valid email address</p> : space}\n                            </Fragment>: \n                            null}\n                        <label htmlFor=\"userPassword\">Password</label>\n                        <input onChange={this.handleInputChange} type=\"password\" name=\"userPassword\" value={userPassword}/>\n                        {userPasswordError ? <p>Password must be between 6 and 8 characters</p> : space}\n                        {userNew ? \n                        <Fragment>\n                            <label htmlFor=\"userCity\">Home city</label>\n                            <input onChange={this.handleInputChange} type=\"text\" name=\"userCity\" id={userCity}/>\n                            {userCityError ? <p>Please remove special characters</p> : space}\n                        </Fragment> :\n                        null}\n                        <button onClick={this.handleSubmit}>{userNew ? \"Sign Up\" : \"Login\"}</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login;\n","import React, {Component, Fragment} from \"react\";\nimport axios from 'axios';\nimport \"./ConcertDetailsPopUp.css\";\n\nclass ConcertDetailsPopUp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.state = {\n\t\t\tmodalEvent: {\n\t\t\t\tartist: [],\n\t\t\t},\n\t\t}\n\t}\n\n\tdateConvert(d) {\n\t\tlet newDate = new Date(d);\n\t\t\n\t\tnewDate = new Date(newDate.setTime(newDate.getTime() + 1 * 86400000));\n\n\t\tconst date = newDate.toDateString();\n\n\t\treturn date;\n\t};\n\n\tcomponentDidMount() {\n\t\taxios({\n\t\t\turl: `https://app.ticketmaster.com/discovery/v2/events/${this.props.match.params.eventID}`,\n\t\t\tmethod: \"GET\",\n\t\t\tresponseType: \"JSON\",\n\t\t\tparams: {\n\t\t\t\tapikey: \"Mh0RGGBfkgADAASrXM25WfhUueio9rgV\",\n\t\t\t\tlocale: \"en-us\",\n\t\t\t\tsegment: \"music\",\n\t\t\t}\n\t\t}).then(response => {\t\t\t\n\t\t\tconst res = response.data;\n\n\t\t\tconst dateStr = res.dates.start.localDate;\n\t\t\tconst dateFormat = this.dateConvert(dateStr);\n\t\t\tlet minPrice;\n\n\t\t\tif ('priceRanges' in res) {\n\t\t\t\tminPrice = res.priceRanges[0].min;\n\t\t\t\tminPrice = minPrice.toFixed(2);\n\t\t\t} else {\n\t\t\t\tminPrice = \"0\"\n\t\t\t}\n\n\t\t\tlet artist;\n\t\t\tif (\"attractions\" in res) {\n\t\t\t\tres._embedded.attractions.map(art => {\n\t\t\t\t\treturn art.name;\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tartist = \"N/A\"\n\t\t\t}\n\t\t\t\n\n\t\t\tthis.setState({\n\t\t\t\tmodalEvent: {\n\t\t\t\t\teventID: res.id, \n\t\t\t\t\tname: res.name, \n\t\t\t\t\tvenue: res._embedded.venues[0].name, \n\t\t\t\t\tlocation: { \n\t\t\t\t\t\tcity: res._embedded.venues[0].city.name, \n\t\t\t\t\t\tcountry: res._embedded.venues[0].country.name,\n\t\t\t\t\t},\n\t\t\t\t\tinfo: res.info,\n\t\t\t\t\tminPrice,\n\t\t\t\t\tdate: dateFormat,\n\t\t\t\t\tstatus: (res.dates.status.code).toUpperCase(),\n\t\t\t\t\timgUrl: res.images[0].url,\n\t\t\t\t\ttickets: res.url,\n\t\t\t\t\tartist,\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\trender() {\n\t\tconst {modalEvent} = this.state\n\t\treturn (\n\t\t\t<div className=\"modalContainer\">\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"modalContent\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>{modalEvent.name}</h1>\n\t\t\t\t\t\t<h2> @ {modalEvent.venue}</h2>\n\t\t\t\t\t\t<h3>{modalEvent.date}</h3>\n\n\t\t\t\t\t\t<div className=\"modalImage\">\n\t\t\t\t\t\t\t<img src={modalEvent.imgUrl} alt={modalEvent.name}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modalEvent\">\n\t\t\t\t\t\t<div className=\"modalEventDetails\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmodalEvent.status === \"CANCELLED\" \n\t\t\t\t\t\t\t\t? <> \n\t\t\t\t\t\t\t\t<h3 className=\"modalStatus\">{modalEvent.status}</h3> \n\t\t\t\t\t\t\t\t<p>Due to Covid-19, this show has been cancelled or rescheduled.</p>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<h3 className=\"modalStatus\">{modalEvent.status}</h3>\n\t\t\t\t\t\t\t\t\t<h3>Tickets start at ${modalEvent.minPrice}</h3>\n\n\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t{/* \n\t\t\t\t\t\t\t\t\t<h3>Featuring: </h3>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t{modalEvent.artist.map(art => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<li key={art}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{art}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</li>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t)})}  \n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t*/}\n\t\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t<h3>{modalEvent.info}</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"modalButtons\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmodalEvent.status === \"CANCELLED\" ?\n\t\t\t\t\t\t\t\t<button>Add to Wishlist</button> :\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<button>Add to List</button>\n\t\t\t\t\t\t\t\t\t<button href={modalEvent.tickets}>Buy Tickets</button>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ConcertDetailsPopUp;","import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport \"./ConcertCard.css\";\n\nclass ConcertCard extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tevent: [],\n\t\t\tmodalEvent: \"\",\n\t\t\tfilteredResults: [],\n\t\t\tisFiltered: false,\n\t\t\tfilterPrice: \"0\",\n\t\t\terror: \"\",\n\t\t\terrorMsg: \"\",\n\t\t\tsearchCity: \"\",\n\t\t\tsearchArtist: \"\",\n\t\t};\t\n\t};\n\t// Function to convert date from YYYY-MM-DD format to Weekday Month Day Year format\n\tdateConvert(d) {\n\t\tlet newDate = new Date(d);\n\t\t\n\t\tnewDate = new Date(newDate.setTime(newDate.getTime() + 1 * 86400000));\n\n\t\tconst date = newDate.toDateString();\n\n\t\treturn date;\n\t};\n\n\tcollectPrice (data) {\n\t\tif (data.priceRanges) {\n\t\t\treturn ({\n\t\t\t\ttype: data.priceRanges[0].type,\n\t\t\t\tcurrency: data.priceRanges[0].currency,\n\t\t\t\tmin: `${data.priceRanges[0].min.toFixed(2)}`,\n\t\t\t\tmax: `${data.priceRanges[0].max.toFixed(2)}`,\n\t\t\t})\n\t\t} else {\n\t\t\treturn ({\n\t\t\t\ttype: false,\n\t\t\t\tcurrency: false,\n\t\t\t\tmin: \"N/A\",\n\t\t\t\tmax: \"N/A\",\n\t\t\t})\n\t\t}\n\t}\n\n\t// Function to parse data\n\tmapToAppData(response)  {\n\t\tconst res = response.data._embedded.events;\n\t\tconst resEvent = res.map( (data) => {\n\t\t\t// To get ID\n\t\t\tconst eventID = data.id;\n\t\t\t\n\t\t\t// To get the name of the artist\n\t\t\tconst name = data.name;\n\t\t\t\n\t\t\t// To get the venue\n\t\t\tconst venue =  data._embedded.venues[0].name;\n\n\t\t\t// To get city, country, and City, Country combo as some entries will not have a state value (ie: Canada has provinces, not states)\n\t\t\tconst city = data._embedded.venues[0].city.name;\n\t\t\t\n\t\t\tconst country = data._embedded.venues[0].country.name;\n\t\t\t\n\t\t\tconst cityCountry = `${city}, ${country}`;\n\t\t\t\n\t\t\t// To get Date\n\t\t\tconst dateStr = data.dates.start.localDate;\n\n\t\t\tconst dateFormat = this.dateConvert(dateStr);\n\n\t\t\tconst dateNum = Date.parse(dateStr);\n\n\t\t\t// To get image\n\t\t\tconst imgUrl = data.images[2].url;\n\n\t\t\t// To get price\n\t\t\tconst price = this.collectPrice(data);\n\n\t\t\t// Return obj to push to this.state.event\n\t\t\treturn ({\n\t\t\t\teventID,\n\t\t\t\tname,\n\t\t\t\tvenue,\n\t\t\t\tlocation: {\n\t\t\t\t\tcity,\n\t\t\t\t\tcountry,\n\t\t\t\t\tcityCountry,\n\t\t\t\t},\n\t\t\t\tdate: {\n\t\t\t\t\tdateStr,\n\t\t\t\t\tdateNum,\n\t\t\t\t\tdateFormat\n\t\t\t\t},\n\t\t\t\timgUrl,\n\t\t\t\t// tickets,\n\t\t\t\tprice,\n\t\t\t});\t\t\n\t\t})\n\t\treturn resEvent;\n\t};\n\t//Update this.state.filterPrice on select\n\thandleChange(e) {\n\t\tthis.filterResults(e.target.value);\n\t\tthis.setState({\n\t\t\tfilterPrice: parseFloat(e.target.value),\n\t\t})\n\t}\n\n\trenderConcertCell(entry) {\n\t\tconst {eventID, imgUrl, name, date, price} = entry;\n\t\treturn (\t\n\t\t\t<div key={eventID} className=\"concertCell\">\n\t\t\t\t<Link to={`/event/${eventID}`}>\n\t\t\t\t<div className=\"imageContainer\">\n\t\t\t\t\t<img src={imgUrl} alt={name} />\t\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"concertInfo\">\n\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t<p>{date.dateFormat}</p>\n\t\t\t\t\t{price.min === 'N/A' \n\t\t\t\t\t\t? <p>No prices currently available.</p>\n\t\t\t\t\t\t: <p>Prices starting as low as ${price.min}</p>}\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n\n\tfilterResults() {\n\t\tconst eventCopy = this.state.event;\n\t\tlet price = parseFloat(this.state.filterPrice);\n\n\t\tconst filteredResults = eventCopy.filter((event) => {\n\t\t\t\tconst shouldFilter = parseFloat(event.price.min) <= parseFloat(price)\n\n\t\t\t\treturn shouldFilter\n\t\t})\n\n\t\tthis.setState({\n\t\t\tfilteredResults,\n\t\t})\n\t}\n\n\tshowFiltered(e) {\n\t\te.preventDefault();\n\t\tlet isFiltered;\n\n\t\tif (this.state.filterPrice == \"0\") {\n\t\t\tisFiltered = false;\n\t\t} else {\n\t\t\tisFiltered = true;\n\t\t}\n\t\tthis.setState({\n\t\t\tisFiltered,\n\t\t})\n\n\t\tthis.filterResults();\n\t}\n\n\trunAxios() {\n\t\tlet city;\n\t\tlet keyword;\n\t\tif (!this.props.data) {\n\t\t\tcity = \"Toronto\";\n\t\t\tkeyword = \"\";\n\t\t} else {\n\t\t\tcity = this.props.data.location[0]\n\t\t\tkeyword = this.props.data.artist\n\t\t}\n\n\n\t\taxios({\n\t\t\turl: \"https://app.ticketmaster.com/discovery/v2/events\",\n\t\t\tmethod: \"GET\",\n\t\t\tresponseType: \"JSON\",\n\t\t\tparams: {\n\t\t\t\tapikey: \"Mh0RGGBfkgADAASrXM25WfhUueio9rgV\",\n\t\t\t\tsegmentName: \"music\",\n\t\t\t\tcity,\n\t\t\t\tkeyword,\n\t\t\t}\n\t\t}).then(response => {\n\t\t\tif (\"_embedded\" in response.data) {\n\t\t\t\tconst resEvent = this.mapToAppData(response);\n\t\t\t\tthis.setState({\n\t\t\t\t\tevent: resEvent,\n\t\t\t\t\terror: false,\n\t\t\t\t\terrorMsg: \"\",\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: true,\n\t\t\t\t\terrorMsg: \"Oh no! There were no matching results!\"\n\t\t\t\t});\n\t\t\t\tthis.props.data.location[0] = \"\";\n\t\t\t\tthis.props.data.artist = \"\";\n\t\t\t\t\n\t\t\t}\n\t\t});\n\t};\n\tcomponentDidMount() {\n\t\tthis.runAxios();\n\t};\n\tcomponentDidUpdate() {\n\t\tthis.runAxios();\n\t};\n\thandleError = (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({\n\t\t\terror: false,\n\t\t});\n\t};\n\trender() {\n\t\tconst {filterPrice, isFiltered, event, filteredResults} = this.state\n\t\treturn (\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<section className=\"budgetFilter\">\n\t\t\t\t\t<h2>{this.state.errorMsg}</h2>\n\t\t\t\t\t<p>Filter results for your budget: </p>\n\t\t\t\t\t\t\n\t\t\t\t\t<select value={filterPrice} onChange={(e) => this.handleChange(e)}>\n\t\t\t\t\t\t<option value=\"0\">All</option>\n\t\t\t\t\t\t<option value=\"25\">$25 or Less</option>\n\t\t\t\t\t\t<option value=\"50\">$50 or Less</option>\n\t\t\t\t\t\t<option value=\"75\">$75 or Less</option>\n\t\t\t\t\t\t<option value=\"100\">$100 or Less</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<button onClick={(e) => this.showFiltered(e)}>Filter</button>\n\t\t\t\t</section>\n\n\t\t\t\t<section className=\"concertCards\">\n\t\t\t\t\t{\n\t\t\t\t\t\tisFiltered === false ?\n\t\t\t\t\t\tevent.map(event => this.renderConcertCell(event)) :\n\t\t\t\t\t\tfilteredResults.map(event => this.renderConcertCell(event)) \n\t\t\t\t\t}\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n}};\n\nexport default ConcertCard;","import React, {Component, Fragment} from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ConcertCard from './ConcertCard';\nimport './Search.css'\n\nclass Search extends Component {\n  constructor() {\n        super();\n        this.state = {\n            cityNames: [],\n            userLocationSplit: [],\n            userLocation: '',\n            userArtist: '',\n\t\t    displayDropdown: false,\n            data: {}\n      }\n  }\n\n  findCity = (input) => {\n    axios({    \n        method: 'GET',\n        url: 'https://proxy.hackeryou.com',\n        dataType: 'jsonp',\n        params: {\n            method: 'GET',\n            reqUrl: `http://gd.geobytes.com/AutoCompleteCity?q=${input}&sort=size&`,\n            proxyHeaders: {\n                header_params: 'value'\n            },\n            xmlToJSON: false\n        }\n    }).then(res => {\n        this.setState({\n            cityNames: res.data\n        })\n        if (res.data.length >= 1) {\n            this.setState({\n                displayDropdown: true\n            })\n        }\n    });\n}\n\nhandleInputChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n    if (e.target.name === 'userLocation' & e.target.value.length >= 3) {\n        this.findCity(e.target.value)\n    } else {\n        this.setState({\n            cityNames: [],\n            displayDropdown: false\n        })\n    }\n}\n\nhandleLocation = (e) => {\n    e.preventDefault();\n    const location = e.target.value.split(', ');\n    this.setState({\n        userLocationSplit: location,\n        userLocation: e.target.value,\n        displayDropdown: false\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault();        \n    const userArtist = this.state.userArtist;\n    const userLocation = this.state.userLocationSplit;\n\t\tthis.setState({\n            data: {\n                artist: userArtist,\n                location: userLocation,\n            },\n            userLocation: '',\n            userArtist: '',\n        })\n}\n\n    render() {\n        const {userLocation, userArtist, displayDropdown, cityNames, data} = this.state;\n        return(\n            <Fragment>\n                <div className=\"search wrapper\">\n                    <form className=\"wrapper\">\n                        <div>\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"userLocation\">Location</label>\n                        <span className=\"input__container\">\n                            <input onChange={this.handleInputChange} type=\"text\" name=\"userLocation\" value={userLocation}/>\n                            {displayDropdown ? \n                                <div className=\"city-options\">\n                                    <ul>\n                                        {cityNames.map(city => {\n                                            return <li key={city.replace(/ /g, '')}><button value={city} onClick={this.handleLocation}>{city}</button></li>\n                                        })}\n                                    </ul>\n                                </div> : \n                                null }\n                        </span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\n                        <label htmlFor=\"userArtist\">Artist</label>\n                        <input onChange={this.handleInputChange} type=\"text\" name=\"userArtist\" value={userArtist}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n                        <button onClick={this.handleSubmit}>\n                            <Link to=\"/event/\">\n                                Search\n                            </Link>\n                        </button>\n                    </form>\n                </div>\n                {data.location || data.artist ? \n                    <Route exact path=\"/event/\">\n                    <ConcertCard data={data} /> \n                    </Route> :\n                    null }\n            </Fragment>\n        )\n\t\t}\n\t\t\n}\n\nexport default Search;","import React, {Component, Fragment} from 'react';\nimport firebase from './firebase';\n\n\nclass Landing extends Component {\n  constructor() {\n      super();\n      this.state = {\n          newName: '',\n          newList: '',\n          newBudget: '',\n          published: false\n      }\n  }\n    render() {\n        const {newName, newList, newBudget} = this.props.data\n        return(\n                <div className=\"wrapper header__wrapper\">\n                    <section className=\"header__left\">\n                        <h1>Concert\n                        <br/>Accountant</h1>\n                        <h2>Set your budget.\n                        <br/>Browse concerts.\n                        <br/>Add them to your list.\n                        <br/>Let us worry about the math.</h2>\n                    </section>\n                    <section className=\"header__right\">\n                        <h4>Start budgeting <em>now</em>:</h4>\n                        <hr/>\n                        <form className=\"header__form\">\n                            <label htmlFor=\"newName\">Your name</label>\n                            <input onChange={this.props.handleInputChange}  name=\"newName\" type=\"text\" value={newName}/>\n                            <label htmlFor=\"newList\">Your genre</label>\n                            <input onChange={this.props.handleInputChange}  name=\"newList\" type=\"text\" value={newList}/>\n                            <label htmlFor=\"newBudget\">Your budget</label>\n                            <input onChange={this.props.handleInputChange}  name=\"newBudget\" type=\"text\" value={newBudget}/>\n                            <button onClick={this.props.handleSubmit}>Start now</button>\n                        </form>\n                    </section>\n                </div>\n        )\n    }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport \"./App.css\";\nimport firebase from './firebase';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from './Navbar.js';\nimport MyLists from './MyLists';\nimport Login from './Login.js';\nimport ConcertDetailsPopUp from './ConcertDetailsPopUp.js';\nimport Search from './Search.js';\nimport ConcertCard from './ConcertCard.js';\nimport Landing from './Landing.js'\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tnewName: '',\n            newList: '',\n\t\t\tnewBudget: '',\n\t\t\tpublished: false,\n\t\t\tuserSessionKey: ''\n\t\t}\n\t}\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst {newName, newList, newBudget, published} = this.state;\n\t\tconst userInfo = {\n\t\t\tname: newName,\n\t\t\tbudgetList: {\n\t\t\t\tname: `${newList} Concerts Under $${newBudget}`,\n\t\t\t\tpublished: published,\n\t\t\t\tbudgetList: true,\n\t\t\t\tbudget: newBudget,\n\t\t\t},\n\t\t\twishlist: {\n\t\t\t\tname: 'Wishlist',\n\t\t\t\tpublished: false,\n\t\t\t\tbudgetList: false,\n\t\t\t}\n\t\t};\n        const dbRef = firebase.database().ref();\n\t\tconst key = dbRef.push(userInfo).getKey();\n        this.setState({\n\t\t\tnewList: '',\n\t\t\tnewBudget: '',\n\t\t\tuserSessionKey: key\n        })\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Router basename=\"/\">\n\t\t\t <div className=\"App\">\n\t\t\t\t\t\n\t\t\t\t<header>\n            \t<Navbar/>\n      \t\t\t\t<Landing handleInputChange={this.handleInputChange} handleSubmit={this.handleSubmit} data={this.state}/>\n\t\t\t\t      {this.state.userSessionKey ? <MyLists id={this.state.userSessionKey} /> : null}\n\t\t\t\t</header>\n\t\t\t\t<main>\n\t\t\t\t\t<Search />\n      \t\t\t\t<Route path=\"/login/\" component={Login} />\n\t\t\t\t\t{/* <Route exact path=\"/event/\" component={ConcertCard} />\n\t\t\t\t\t\n\t\t\t\t\t{/* Show concert details */}\n\t\t\t\t\t\n\t\t\t\t\t{/* THIS ONE WORKS */}\n\t\t\t\t\t<Route exact path=\"/event/:eventID\" render={(props) => <ConcertDetailsPopUp {...props} id={this.state.userSessionKey} />} />\n\n\t\t\t\t</main>\n\t\t\t\t</div> \n\t\t\t</Router>\n\t\t);\n\n\t}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}